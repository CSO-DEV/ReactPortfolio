{"version":3,"sources":["lib/scrollTo.js","assets/Navigation/Navigation1.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["scrollTo","id","topPos","document","getElementById","offsetTop","window","top","behavior","Navigation1","props","shortData","data","propos","contenuSection","sectionList","Object","keys","className","startNavigation","fixedNavigationBar","style","display","margin","width","src","config","img","photoPropos","alt","nomPropos","borderRadius","position","alignItems","fontSize","color","fontWeight","textTransform","titrePropos","type","htmlFor","map","element","index","length","lienSection","key","onClick","e","scrollToId","target","split","nomSection","Presentation","Card","Body","dangerouslySetInnerHTML","__html","textePropos","Formation","formations","lienMenu","Header","logoFormation","nomFormation","dateFormation","objectifFormation","href","siteFormation","title","nomSite","rel","ListGroup","variant","Item","commentaireFormation","titreFormation","lienTitre","doc","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","useEffect","carouselAnimation","carousel","global","getElementsByClassName","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","nom","transition","left","clearTimeout","interval","startCarouselTimeout","setTimeout","addEventListener","carouselNext","forEach","justifyContent","border","height","maxWidth","overflow","listStyleType","padding","textAlign","name","source","float","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","i","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","getElementsByName","offsetHeight","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Homepage","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a1928580.chunk.js","sourcesContent":["/**\r\n * @function scrollTo Permet de lancer un déplacement type scroll vers l'id désigné\r\n * @var offset Calcul la distance entre le haut de la page et l'id désigné\r\n */\r\nconst scrollTo =(id)=>{\r\n    let topPos = document.getElementById(id).offsetTop;\r\n    window.scrollTo({\r\n       top: topPos,\r\n       behavior: 'smooth'\r\n      })\r\n}\r\nexport default scrollTo;","import React from 'react';\r\nimport \"./style1.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport scrollToId from \"../../lib/scrollTo\"\r\n\r\n\r\nfunction Navigation1(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   * @var sectionList : Liste des clés de la BDD * DB keys list\r\n   */\r\n  let shortData = data.propos.contenuSection[0];\r\n  let sectionList= Object.keys(data)\r\n\r\n  /**\r\n   * @method startNavigation \r\n   */\r\n    const startNavigation=()=>{\r\n       \r\n    }\r\n\r\n  /**\r\n   * @method fixedNavigationBar \r\n   */\r\n  const fixedNavigationBar=()=>{\r\n    \r\n    }  \r\n    \r\n  /**\r\n   * @method topNavigationBar Affiche une barre de navigation fixe en haut de la page * Top fixed navigation bar display\r\n   * @function navTitle afiche le titre * title display\r\n   * @function navItemsList Affiche la liste des items * items list display\r\n   */\r\n  const topNavigationBar=()=>{\r\n      return(\r\n          <div className=\"nav\">\r\n              {navTitle()}\r\n              <input type=\"checkbox\" id=\"nav-check\"/>\r\n              <div className=\"nav-btn\">\r\n                  <label htmlFor=\"nav-check\">\r\n                    <img src={config.img + \"burger.png\"} className=\"burger\" alt=\"Menu\"/>\r\n                  </label>\r\n              </div>\r\n              <div className=\"nav-links\">\r\n                {navItemsList()}   \r\n              </div>\r\n          </div>\r\n      )\r\n\r\n      /**\r\n       * @function navTitle Afiche le titre * title display\r\n       */\r\n      function navTitle(){\r\n        return(\r\n            <div className=\"topNavigationBarTitle\"\r\n            style={{\r\n                display:\"flex\",\r\n            }}>\r\n              <div className=\"topNavigationBarImg\"\r\n              style={{\r\n                  margin:\"5px\",\r\n                  width: \"77px\",\r\n              }}>\r\n                  <img \r\n                  src={config.img + shortData.photoPropos} alt={\"Photo profil \" + shortData.nomPropos}\r\n                  style={{\r\n                      borderRadius:\"50%\",\r\n                      width: \"100%\",\r\n                  }}/>\r\n              </div>\r\n              <div className=\"topNavigationBarText\"\r\n              style={{\r\n                  margin:\"5px\",\r\n                  position: \"relative\",\r\n                  width: \"400px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n              }}>\r\n                  <div className=\"topNavigationBarH1\"\r\n                  style={{\r\n                    \r\n                  }}>\r\n                      <h1 \r\n                  style={{\r\n                      margin:\"0\",\r\n                      fontSize:\"17px\",\r\n                      color:\"white\",\r\n                      }}>{shortData.nomPropos}</h1>\r\n                  <h1 \r\n                  style={{\r\n                      margin:\"0\",\r\n                      fontSize:\"23px\",\r\n                      fontWeight:\"bolder\",\r\n                      textTransform: \"uppercase\",\r\n                      color:\"white\",\r\n                      }}>{shortData.titrePropos}</h1>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        )\r\n      }\r\n\r\n      /**\r\n       * @function navItemsList Affiche la liste des items * items list display\r\n       */\r\n      function navItemsList(){\r\n        return sectionList.map((element,index)=>{\r\n            if(index<sectionList.length-1){\r\n                return(\r\n                    <label \r\n                    htmlFor=\"nav-check\" \r\n                    id={\"nav\" + data[element].lienSection} \r\n                    key={element + index}\r\n                    onClick={(e)=>scrollToId(e.target.id.split(\"nav\")[1])}\r\n                    className=\"navItems\">{data[element].nomSection}</label>\r\n                )\r\n            };\r\n            return(<div key={element + index}></div>)        \r\n        })\r\n      }\r\n\r\n    }  \r\n    return (\r\n        <div>\r\n            <div className=\"startNavigation\">\r\n            {startNavigation()}\r\n            </div>\r\n            <div className=\"fixedNavigationBar\">\r\n            {fixedNavigationBar()}\r\n            </div>\r\n            <div className=\"topNavigationBar\">\r\n            {topNavigationBar()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation1;","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section id={shortData.lienSection} className=\"presentation tousLiens tailleEcran all\">\r\n      <div className=\"centre\">\r\n        <Card className=\"textePresentation\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"textePresentationInf\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                  alt={\"Logo \" + element.nomFormation}\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"formation tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance && preview){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\";\r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n      document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\"\r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\" key={element.lienMenu + index}>\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"              \r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map((element,index)=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor} key={element + index}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor} key={element + index}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie tousLiens chargement tailleEcran all\"\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div \r\n        id={\"unitPortfolioCard\" + index}\r\n        className=\"unitPortfolioCard\"\r\n        key={element.lienMenu + index}\r\n        >\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}          \r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div className=\"imgProjet\">\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div \r\n              className=\"detailPortfolio\"\r\n              name={\"button\" + index}>\r\n              <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <div className=\"githubPortfolio\">{githubList(element.GitProjet)}</div>\r\n              \r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   * \r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";           \r\n          }\r\n        }\r\n      \r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = document.getElementsByName(e.target.id)[0].offsetHeight + \"px\";\r\n        moreCloseButtonId.innerText = \"Fermer\"; \r\n           return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"portfolio tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React from \"react\";\r\nimport Navigation1 from \"../../assets/Navigation/Navigation1\";\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">\r\n      <Navigation1 />\r\n      <Presentation/>\r\n      <Formation/>\r\n      <Technologie/>\r\n      <Portfolio/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}