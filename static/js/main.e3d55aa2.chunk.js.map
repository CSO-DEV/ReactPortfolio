{"version":3,"sources":["assets/Navigation/Navigation.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","assets/Contact/Contact.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navigation","props","shortData","data","propos","contenuSection","useEffect","window","addEventListener","console","log","Navbar","fixed","expand","className","Brand","src","config","img","alt","nomPropos","title","titrePropos","Toggle","aria-controls","id","Collapse","Nav","Object","keys","map","element","index","length","Link","href","name","lienSection","key","onClick","e","displaySection","nomSection","NavDropdown","Item","Divider","lienMenu","nomMenu","allElements","document","getElementsByClassName","i","style","display","getElementById","target","navItems","Presentation","Card","Body","dangerouslySetInnerHTML","__html","textePropos","Formation","formations","Header","logoFormation","nomFormation","dateFormation","objectifFormation","siteFormation","nomSite","rel","ListGroup","variant","commentaireFormation","titreFormation","lienTitre","doc","type","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","carouselAnimation","carousel","global","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","nom","color","transition","left","clearTimeout","interval","startCarouselTimeout","setTimeout","carouselNext","forEach","justifyContent","border","height","width","maxWidth","overflow","listStyleType","position","margin","padding","fontSize","textAlign","source","float","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Contact","contact","Homepage","opacity","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+gSA8IeA,MArIf,SAAoBC,GAKlB,IAAIC,EAAYC,EAAKC,OAAOC,eAAe,GAqG3C,OAhGAC,qBAAU,WACRC,OAAOC,iBAAiB,UAAS,WAC/BC,QAAQC,IAAI,cA+Fd,6BACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,OAAO,KAAKC,UAAU,cACxC,kBAACH,EAAA,EAAOI,MAAR,CAAcD,UAAU,YACtB,yBACEA,UAAU,cACVE,IAAKC,EAAOC,IAAM,cAClBC,IAAK,sBAAqBjB,EAAUkB,UACpCC,MAAOnB,EAAUkB,YAEnB,yBAAKN,UAAU,YACb,0BAAMA,UAAU,aAAaZ,EAAUkB,WACvC,0BAAMN,UAAU,eAAeZ,EAAUoB,eAG7C,kBAACX,EAAA,EAAOY,OAAR,CACEC,gBAAc,mBACdV,UAAU,mBACVW,GAAG,qBAEL,kBAACd,EAAA,EAAOe,SAAR,CAAiBD,GAAG,mBAAmBX,UAAU,uCAC/C,kBAACa,EAAA,EAAD,CAAKb,UAAU,WArGN,WAGf,OADqBc,OAAOC,KAAK1B,GACZ2B,KAAI,SAACC,EAASC,GAEjC,OAAU,IADF7B,EAAK4B,GAAS1B,eAAe4B,OAGjC,kBAACN,EAAA,EAAIO,KAAL,CACEC,KAAM,IACNC,KAAMjC,EAAK4B,GAASM,YACpBvB,UAAU,kBACVwB,IAAKnC,EAAK4B,GAASM,YAAcL,EACjCO,QAAS,SAACC,GAAD,OAAOC,EAAeD,IAC/Bf,GAAI,MAAQtB,EAAK4B,GAASM,aAEzBlC,EAAK4B,GAASW,YAKjB,kBAACC,EAAA,EAAD,CACEtB,MAAOlB,EAAK4B,GAASW,WACrBjB,GAAI,MAAQtB,EAAK4B,GAASM,YAC1BvB,UAAU,iBACVwB,IAAKnC,EAAK4B,GAASM,YAAcL,GAGjC,kBAACW,EAAA,EAAYC,KAAb,CACET,KAAM,IACNC,KAAMjC,EAAK4B,GAASM,YACpBC,IAAKnC,EAAK4B,GAASM,YAAcL,EACjCO,QAAS,SAACC,GAAD,OAAOC,EAAeD,KAE9BrC,EAAK4B,GAASW,YAEjB,kBAACC,EAAA,EAAYE,QAAb,MACgB1C,EAAK4B,GAuBD1B,eACJyB,KAAI,SAACC,EAASC,GACpC,OACE,kBAACW,EAAA,EAAYC,KAAb,CAEER,KAAML,EAAQe,SACdR,IAAKN,GAGJD,EAAQgB,gBAtBjB,SAASN,EAAeD,GAEtB,IADA,IAAIQ,EAAcC,SAASC,uBAAuB,OACzCC,EAAI,EAAGA,EAAIH,EAAYf,OAAQkB,IACtCH,EAAYG,GAAGC,MAAMC,QAAU,OAEjCJ,SAASK,eAAed,EAAEe,OAAOnB,MAAMgB,MAAMC,QAAU,QAkDvBG,Q,gBClGrBC,MA7Bf,SAAsBxD,GAKpB,IAAIC,EAAYC,EAAKC,OAKrB,OACE,6BAASqB,GAAIvB,EAAUmC,YAAavB,UAAU,0CAC5C,yBAAKA,UAAU,UACb,kBAAC4C,EAAA,EAAD,CAAM5C,UAAU,qBACd,kBAAC4C,EAAA,EAAKC,KAAN,KACE,4BAAKzD,EAAUwC,YACf,yBAAKkB,wBAAyB,CAAEC,OAAQ3D,EAAUG,eAAe,GAAGyD,YAAY,QAIpF,kBAACJ,EAAA,EAAD,CAAM5C,UAAU,wBACd,kBAAC4C,EAAA,EAAKC,KAAN,KACA,yBAAKC,wBAAyB,CAAEC,OAAQ3D,EAAUG,eAAe,GAAGyD,YAAY,W,wBCwE3EC,MA5Ff,SAAmB9D,GAIjB,IAAIC,EAAYC,EAAK6D,WA+ErB,OACE,6BAASvC,GAAIvB,EAAUmC,YAAavB,UAAU,sCAC5C,yBAAKA,UAAU,UACb,wBAAIA,UAAU,gBAAgBZ,EAAUwC,YACxC,yBAAK5B,UAAU,kBA5EZZ,EAAUG,eAAeyB,KAAI,SAACC,EAASC,GAC5C,OACE,yBAAKlB,UAAU,WAAWwB,IAAKP,EAAQe,SAAWd,GAChD,yBAAKP,GAAIM,EAAQe,SAAUhC,UAAU,KACrC,kBAAC4C,EAAA,EAAD,CAAM5C,UAAU,iBAAiBwB,IAAKP,EAAQe,SAAWd,GACvD,kBAAC0B,EAAA,EAAKO,OAAN,KACE,yBAAKnD,UAAU,iBACb,yBACEE,IAAKC,EAAOC,IAAMa,EAAQmC,cAC1BpD,UAAU,cAEZ,yBAAKA,UAAU,aACb,0BAAMA,UAAU,oBACbiB,EAAQoC,cAEX,8BAAOpC,EAAQqC,eACf,8BAAOrC,EAAQsC,mBACf,8BACE,uBACElC,KAAMJ,EAAQuC,cACdf,OAAO,SACPlC,MAAO,aAAeU,EAAQwC,QAC9BzD,UAAU,WACV0D,IAAI,uBAEHzC,EAAQwC,aAMnB,kBAACE,EAAA,EAAD,CAAWC,QAAQ,SACjB,kBAACD,EAAA,EAAU7B,KAAX,CACE9B,UAAU,uBACV8C,wBAAyB,CACvBC,OAAQ9B,EAAQ4C,wBAGpB,kBAACF,EAAA,EAAU7B,KAAX,CAAgB9B,UAAU,oBACpBiB,EAAQ6C,eAYX9C,KAAI,SAACC,EAASC,GACvB,OACE,yBAAKM,IAAKP,EAAQ8C,UAAY7C,GAC5B,uBACEG,KAAMlB,EAAO6D,IAAM/C,EAAQ8C,UAC3BtB,OAAO,SACPwB,KAAK,kBACLP,IAAI,uBAEJ,kBAAC,IAAD,MACCzC,EAAQiD,yB,YCuKRC,MAnPf,SAAkBhF,GAWlB,IAAIiF,EAAKjF,EAAMkF,WAXU,EAYA,CAAClF,EAAMmF,WAAWnF,EAAMoF,aAA5CC,EAZoB,KAYXC,EAZW,KAarBC,EAAYvF,EAAMuF,YAClBC,EAAcxF,EAAMyF,SACpBC,EAAkC,KAAjBT,EAAKjD,OAAO,GAAW,IAK5C3B,qBAAU,WACRsF,OAUF,IAAMA,EAAkB,WAEtB,IAAIC,EAAS,GACbA,EAASC,OAAO7C,SAASC,uBAAuB,iBAAmBsC,GAAa,GAChFK,EAASE,UAAU9C,SAASC,uBAAuB,oBAAsBsC,GAAa,GACtFK,EAASG,GAAG/C,SAASC,uBAAuB,aAAesC,GAAa,GACxEK,EAASI,OAAO,CACdC,QAAQjD,SAASC,uBAAuB,kBAAoBsC,GAAa,GACzEW,QAAQlD,SAASC,uBAAuB,mBAAqBsC,GAAa,IAE5EK,EAASO,aAAe,EACxBP,EAASQ,MAAMR,EAASG,GAAGM,SAXD,IAcrBC,EAAqB,IAmB1B,SAASC,EAAcC,GAErBxD,SAASK,eAAe4B,EAAKW,EAASO,aAAaM,KAAKtD,MAAMuD,MAAM,UAEpEd,EAASO,YAAYK,EACrBxD,SAASK,eAAe4B,EAAKW,EAASO,aAAaM,KAAKtD,MAAMuD,MAAM,UAGpEJ,EAAW,IACXV,EAASG,GAAG5C,MAAMwD,WAAa,cAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,IAC9DU,aAAajB,EAASkB,UA6DxB,SAASC,IAEPF,aAAajB,EAASkB,UACpBlB,EAASkB,SAAWE,YAAW,WA3B9BpB,EAASO,aAAa,GAAKP,EAASO,YAAYlB,EAAKjD,SACtDgB,SAASK,eAAe4B,EAAKW,EAASO,aAAaM,KAAKtD,MAAMuD,MAAM,WAItEd,EAASO,cACNP,EAASO,aAAeP,EAASQ,MAAMpE,QACxC4D,EAASO,YAAc,EACvBP,EAASG,GAAG5C,MAAMwD,WAAa,OAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,IAC9DG,EAAW,MAEXA,EAAW,IACXV,EAASG,GAAG5C,MAAMwD,WAAa,cAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,KAGhEnD,SAASK,eAAe4B,EAAKW,EAASO,aAAaM,KAAKtD,MAAMuD,MAAM,UAGlEK,MASET,GA7FAV,EAASI,OAAOC,UACtBL,EAASI,OAAOE,QAAQ3F,iBAAiB,SAAS,SAASgC,GA+CzDqD,EAASO,cACNP,EAASO,cAAe,GACzBP,EAASO,YAAcP,EAASQ,MAAMpE,OAAO,EAC7C4D,EAASG,GAAG5C,MAAMwD,WAAa,OAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,MAE9DG,EAAW,IACXV,EAASG,GAAG5C,MAAMwD,WAAa,cAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,IAC9DY,QAvDFnB,EAASI,OAAOC,QAAQ1F,iBAAiB,SAAS,SAASgC,IA6B7D,WACEqD,EAASO,cACNP,EAASO,aAAeP,EAASQ,MAAMpE,QACxC4D,EAASO,YAAc,EACvBP,EAASG,GAAG5C,MAAMwD,WAAa,OAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,IAC9DG,EAAW,MAEXA,EAAW,IACXV,EAASG,GAAG5C,MAAMwD,WAAa,cAC/Bf,EAASG,GAAG5C,MAAMyD,KAAoC,IAAvBhB,EAASO,aAAd,EAAoC,KAEhEY,IAzC+DE,OAG/DhC,EAAKiC,SAAQ,SAACpF,EAAQC,GACpBiB,SAASK,eAAevB,EAAQ2E,KAAKlG,iBAAiB,aAAY,SAASgC,GAAGgE,EAAcxE,MAC5FiB,SAASK,eAAevB,EAAQ2E,KAAKlG,iBAAiB,cAAa,SAASgC,GAAGwE,OAC/E/D,SAASK,eAAevB,EAAQ2E,KAAKlG,iBAAiB,WAAU,SAASgC,GAAGgE,EAAcxE,SAK5FgF,KAsIF,OACE,yBACAlG,UAAW,iBAAmB0E,EAC9BpC,MAAO,CACLC,QAAQ,OACR+D,eAAgB,SAChBC,OAAQ,wBAGP5B,EACD,4BACE3E,UAAW,mBAAqB0E,EAChCpC,MAAO,CACLiE,OAAO,MACPC,OAAO,OACPC,MAAM,SALV,KASE,qCAEF,yBACEzG,UAAW,oBAAsB0E,EACjCpC,MAAO,CACLmE,MAAOjC,EACPkC,SAAU,SACVC,SAAU,WA9ChB,wBACA3G,UAAW,aAAe0E,EAC1BpC,MAAO,CACLsE,cAAe,OACfC,SAAU,WACVJ,MAAO5B,EACP2B,OAAO,OACPM,OAAQ,IACRC,QAAS,IACTC,SAAU,IACVC,UAAW,SAhCN7C,EAAKpD,KAAI,SAACC,EAAQC,GACvB,OACA,wBACElB,UAAW,aAAgB0E,EAC3BlD,IAAK,aAAekD,EAAcxD,EAClCI,KAAM,aAAeL,EAAQ2E,KAE7B,yBACA1F,IAAKC,EAAOC,IAAMa,EAAQiG,OAC1B7G,IAAKY,EAAQ2E,IACbtE,KAAML,EAAQ2E,IACdtD,MAAO,CACL6E,MAAO,OACPV,MAAOjC,EACPgC,OAAQ/B,WA2DXE,EACD,4BACE3E,UAAW,kBAAoB0E,EAC/BpC,MAAO,CACLiE,OAAO,MACPC,OAAO,OACPC,MAAM,SALV,KAUE,uC,QCxGOW,MAlIf,SAAqBjI,GAInB,IAAIC,EAAYC,EAAKgI,OAoGrB,OACE,6BACA1G,GAAIvB,EAAUmC,YACdvB,UAAU,oDAER,yBACAA,UAAU,UAGJ,wBACAA,UAAU,gBAEPZ,EAAUwC,YAEjB,yBACA5B,UAAU,cACVW,GAAG,eA3GAvB,EAAUG,eAAeyB,KAAI,SAACC,EAASC,GAC5C,IAAIoG,EAAU,GAKX,OAJHrG,EAAQsG,YAAYlB,SAAQ,SAAAmB,GAC1BF,EAAUG,KAAK,CAAC7B,IAAK4B,EAAGE,UAAYR,OAAOM,EAAGG,gBAEhDL,EAAUG,KAAK,CAAC7B,IAAK3E,EAAQsG,YAAY,GAAGG,UAAYR,OAAOjG,EAAQsG,YAAY,GAAGI,aAElF,yBAAK3H,UAAU,mBACb,kBAAC4C,EAAA,EAAD,CACEjC,GAAIM,EAAQe,SACZhC,UAAU,cACVwB,IAAKP,EAAQe,SAAWd,GAExB,kBAAC0B,EAAA,EAAKO,OAAN,KACE,yBAAKnD,UAAU,eACb,kBAAC,EAAD,CACA0E,YAAaxD,EACbmD,WAAYiD,EACZhD,WAAW,OACXC,YAAY,OACZK,UAAU,IAEV,0BAAM5E,UAAU,oBACbiB,EAAQ2G,mBAIf,kBAACjE,EAAA,EAAD,CAAWC,QAAQ,SAAmB3C,EAAQsG,YAWxCvG,KAAI,SAACC,EAASC,GAC1B,OACE,kBAACyC,EAAA,EAAU7B,KAAX,CACAN,IAAKP,EAAQyG,UAAYxG,EACzBlB,UAAU,aAER,yBAAKA,UAAU,cAsBvB,SAAoB6H,GAKlB,IAJA,IAAIC,EAAUC,KAAKC,MAAMH,EAAM,IAC3BI,EAAa,EAAEH,EAEfI,EAAS,GACL7F,EAAE,EAAEA,EAAEyF,EAAUzF,IACtB6F,EAAST,KAAK,KAEhB,IAAI,IAAIpF,EAAE,EAAEA,EAAE4F,EAAa5F,IACzB6F,EAAST,KAAK,KAEhB,OAAOS,EAASlH,KAAI,SAAAC,GAClB,MAAa,MAAVA,EACM,kBAAC,IAAD,CAAY4E,MAVT,YAaH,kBAAC,IAAD,CAAeA,MAbZ,eAxBLsC,CAAWlH,EAAQmH,eAEtB,yBAAKpI,UAAU,aACb,0BACEA,UAAU,YACVW,GAAIM,EAAQyG,UACZpG,KAAML,EAAQyG,UAAYxG,GAEzBD,EAAQyG,0B,gBCkEVW,MAnIf,SAAmBlJ,GAIjB,IAAIC,EAAYC,EAAKiJ,OAoHrB,OACE,6BAAS3H,GAAIvB,EAAUmC,YAAavB,UAAU,sCAC5C,yBAAKA,UAAU,UAEb,wBAAIA,UAAU,gBAAgBZ,EAAUwC,YACxC,yBAAK5B,UAAU,kBA7GZZ,EAAUG,eAAeyB,KAAI,SAACC,EAASC,GAC5C,OACE,kBAAC0B,EAAA,EAAD,CACEjC,GAAIM,EAAQe,SACZhC,UAAU,iBACVwB,IAAKP,EAAQe,SAAWd,GAExB,kBAAC0B,EAAA,EAAKO,OAAN,KACE,yBAAKnD,UAAU,kBACb,6BACE,yBAAKE,IAAKC,EAAOC,IAAMa,EAAQsH,YAAavI,UAAU,iBAAkBK,IAAK,QAAUY,EAAQsH,eAEjG,yBAAKvI,UAAU,kBACb,0BAAMA,UAAU,oBAAoBiB,EAAQuH,WAC5C,8BAAOvH,EAAQwH,cAEjB,kBAACC,EAAA,EAAD,CACE/H,GAAI,SAAWO,EACfI,KAAML,EAAQ0H,SAAWzH,EACzBlB,UAAW,kBACXyB,QAAS,SAACC,IAiCtB,SAAmBA,GAKf,IAJF,IAAIkH,EAAsBzG,SAASK,eAAed,EAAEe,OAAOnB,MACvDuH,EAAoB1G,SAASK,eAAed,EAAEe,OAAO9B,IACrDmI,EAAuB3G,SAASC,uBAAuB,mBAEhDC,EAAE,EAAEA,EAAEyG,EAAqB3H,OAAOkB,IACrCF,SAASK,eAAesG,EAAqBzG,GAAG1B,MAAMkI,IACxD1G,SAASK,eAAesG,EAAqBzG,GAAG1B,IAAIoI,UAAY,mBAChE5G,SAASK,eAAesG,EAAqBzG,GAAGf,MAAMgB,MAAMkE,OAAS,KAI3E,GAAoC,qBAAhCqC,EAAkBE,UAGpB,OAFAH,EAAoBtG,MAAMkE,OAAS,YACnCqC,EAAkBE,UAAY,UAII,WAAhCF,EAAkBE,YACpBH,EAAoBtG,MAAMkE,OAAS,IACnCqC,EAAkBE,UAAY,oBApDpBC,CAAUtH,KALd,sBAYJ,kBAACiC,EAAA,EAAD,CACEC,QAAQ,QACRjD,GAAIM,EAAQ0H,SAAWzH,EACvBlB,UAAU,QAEV,yBAAKA,UAAU,mBACf,uBAAGA,UAAU,uBAAuBiB,EAAQgI,gBAC1C,8BAAOhI,EAAQiI,mBACf,uBAAGlJ,UAAU,uBAAb,gBACA,8BAAOiB,EAAQkI,cACf,uBAAGnJ,UAAU,uBAAb,SACA,8BAAkBiB,EAAQmI,UA4ChBpI,KAAI,SAACC,EAASC,GAC9B,OACE,yBAAKM,IAAKP,EAAQoI,OAASnI,GACzB,kBAAC,IAAD,MACA,uBACEG,KAAMJ,EAAQqI,QACd/I,MAAO,eAAiBU,EAAQoI,OAChC5G,OAAO,SACPiB,IAAI,uBAEHzC,EAAQoI,uB,MCjGRE,MAff,SAAiBpK,GAIf,IAAIC,EAAYC,EAAKmK,QAKrB,OACE,6BAAS7I,GAAIvB,EAAUmC,YAAavB,UAAU,gDAC5C,wBAAIA,UAAU,gBAAgBZ,EAAUwC,c,MC6C/B6H,MAjDf,SAAkBtK,GAoChB,OACE,yBAAKa,UAAU,WAAWW,GAAG,YAC3B,kBAAC,EAAD,MAVA,yBAAKA,GAAG,SAASX,UAAU,0BAA0BsC,MAAO,CAAC,OAAS,QAAQ,MAAQ,QAAS,SAAW,WACxG,yBAAKpC,IAAKC,EAAOC,IAAM,aAAckC,MAAO,CAAC,OAAU,OAAQ,MAAQ,QAASjC,IAAI,oBAtBxF8F,YAAW,WACThE,SAASK,eAAe,UAAUF,MAAMC,QAAU,OAClDJ,SAASK,eAAe,UAAUF,MAAMC,QAAU,OAClCzB,OAAOC,KAAK1B,GAChBgH,SAAQ,SAAApF,GAClBkB,SAASK,eAAenD,EAAK4B,GAASM,aAAae,MAAMC,QAAU,YAGnE,UACJ4D,YAAW,WACThE,SAASC,uBAAuB,mBAAmB,GAAGE,MAAMoH,QAAU,IACtEvH,SAASC,uBAAuB,oBAAoB,GAAGE,MAAMoH,QAAU,MAErE,OAqBF,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCvCSC,MAXf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWJ,QCHjBK,QACW,cAA7BrK,OAAOsK,SAASC,UAEe,UAA7BvK,OAAOsK,SAASC,UAEhBvK,OAAOsK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjI,SAASK,eAAe,SDyHpB,kBAAmB6H,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjL,QAAQiL,MAAMA,EAAMC,c","file":"static/js/main.e3d55aa2.chunk.js","sourcesContent":["/**\r\n * Navigation.js : Component Navigation\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\n\r\nfunction Navigation(props) {\r\n\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.propos.contenuSection[0];\r\n\r\n  /**\r\n   * @function useEffect : Controle de position des elements DOM * DOM element position control\r\n   */\r\n  useEffect(()=>{\r\n    window.addEventListener('scroll',()=>{\r\n      console.log('test')\r\n    })\r\n  })\r\n\r\n  /**\r\n   * @method navItems : Affichage des éléments de navigation * Navigation items Display\r\n   * @var data : Donnée BDD * DB data\r\n   * @var dataListItems : Liste des clés de la BDD * DB data keys list\r\n   * @function displaySection : Affiche les sections en fonction du choix dans le navigateur * displays the sections according to the choice in the browser\r\n   * @var allElements : Récupère les elements DOM de class \"all\" * Get class \"all\" DOM's elements\r\n   * @function sectionContent : Affichage des items pour chaque section * Display items for each section\r\n   * @var sectionItemsList : Tableau des items pour chaque section * Items' array for each section\r\n   * \r\n   */\r\n  const navItems = () => {\r\n\r\n     let dataListItems = Object.keys(data);\r\n    return dataListItems.map((element, index) => {\r\n      let n = data[element].contenuSection.length;\r\n      if (n === 1) {\r\n        return (\r\n          <Nav.Link\r\n            href={\"#\"}\r\n            name={data[element].lienSection}\r\n            className=\"texteNavigation\"\r\n            key={data[element].lienSection + index}\r\n            onClick={(e) => displaySection(e)}\r\n            id={\"nav\" + data[element].lienSection}\r\n          >\r\n            {data[element].nomSection}\r\n          </Nav.Link>\r\n        );\r\n      } else {\r\n        return (\r\n          <NavDropdown\r\n            title={data[element].nomSection}\r\n            id={\"nav\" + data[element].lienSection}\r\n            className=\"menuNavigation\"\r\n            key={data[element].lienSection + index}\r\n\r\n          >\r\n            <NavDropdown.Item\r\n              href={\"#\"}\r\n              name={data[element].lienSection}\r\n              key={data[element].lienSection + index}\r\n              onClick={(e) => displaySection(e)}\r\n            >\r\n              {data[element].nomSection}\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            {sectionContent(data[element])}\r\n          </NavDropdown>\r\n        );\r\n      }\r\n    });\r\n  \r\n  /**\r\n   * @function displaySection :Affiche les sections en fonction du choix dans le navigateur * displays the sections according to the choice in the browser\r\n   * @var allElements : Récupère les elements DOM de class \"all\" * Get class \"all\" DOM's elements\r\n   */\r\n  function displaySection(e){\r\n    let allElements = document.getElementsByClassName(\"all\");\r\n    for (let i = 0; i < allElements.length; i++) {\r\n      allElements[i].style.display = \"none\";\r\n    }\r\n    document.getElementById(e.target.name).style.display = \"flex\";\r\n  };\r\n\r\n  /**\r\n   * @function sectionContent : Affichage des items pour chaque section * Display items for each section\r\n   * @var sectionItemsList : Tableau des items pour chaque section * Items' array for each section\r\n   */\r\n  function sectionContent(data){\r\n    let sectionItemsList = data.contenuSection;\r\n    return sectionItemsList.map((element, index) => {\r\n      return (\r\n        <NavDropdown.Item\r\n          //href={\"#\" + element.lienMenu}\r\n          name={element.lienMenu}\r\n          key={index}\r\n          //onClick={(e) => navigation(e)}\r\n        >\r\n          {element.nomMenu}\r\n        </NavDropdown.Item>\r\n      );\r\n    });\r\n  };\r\n\r\n  };\r\n\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n */\r\n  return (\r\n    <nav>\r\n      <Navbar fixed=\"top\" expand=\"lg\" className=\"navigation\">\r\n        <Navbar.Brand className=\"identite\">\r\n          <img\r\n            className=\"photoPropos\"\r\n            src={config.img + \"PhotoCV.jpg\"}\r\n            alt={\"photo d'identité\" + shortData.nomPropos}\r\n            title={shortData.nomPropos}\r\n          />\r\n          <div className=\"nomTitre\">\r\n            <span className=\"nomPropos\">{shortData.nomPropos}</span>\r\n            <span className=\"titrePropos\">{shortData.titrePropos}</span>\r\n          </div>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle\r\n          aria-controls=\"basic-navbar-nav\"\r\n          className=\"boutonNavigation\"\r\n          id=\"boutonNavigation\"\r\n        />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"listeNavigation listeNavigationInit\">\r\n          <Nav className=\"mr-auto\">{navItems()}</Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </nav>\r\n  );\r\n}\r\nexport default Navigation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section id={shortData.lienSection} className=\"presentation tousLiens tailleEcran all\">\r\n      <div className=\"centre\">\r\n        <Card className=\"textePresentation\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"textePresentationInf\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Image } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"formation tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    \r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\";\r\n  \r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\">\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"\r\n              key={element.lienMenu + index}\r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map(element=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie tousLiens chargement tailleEcran all\"\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Image, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}\r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div>\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div className=\"detailPortfolio\">\r\n            <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <span>{githubList(element.GitProjet)}</span>\r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";\r\n          }\r\n      }\r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = \"auto\";\r\n        moreCloseButtonId.innerText = \"Fermer\";\r\n        return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"portfolio tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>\r\n       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\n\r\n\r\nfunction Contact(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.contact;\r\n  \r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"contact tousLiens chargement tailleEcran all\">\r\n      <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n    </section>\r\n  );\r\n}\r\nexport default Contact;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React from \"react\";\r\nimport Navigation from \"../../assets/Navigation/Navigation\";\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport Contact from \"../../assets/Contact/Contact\";\r\nimport config from \"../../configData/config.json\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n  /**\r\n   * @method startDisplay : Affichage au démarrage de la page * Start page display\r\n   * @var sectionList : Tableau sections BDD * DB sections array                     \r\n   */\r\n  const startDisplay=()=>{\r\n    setTimeout(function(){\r\n      document.getElementById(\"depart\").style.display = \"none\";     \r\n      document.getElementById(\"propos\").style.display = \"flex\";\r\n      let sectionList=Object.keys(data);\r\n      sectionList.forEach(element=>{\r\n        document.getElementById(data[element].lienSection).style.display = \"flex\";\r\n      });\r\n      }\r\n      , 10000);\r\n    setTimeout(function(){      \r\n      document.getElementsByClassName(\"listeNavigation\")[0].style.opacity = \"1\";   \r\n      document.getElementsByClassName(\"boutonNavigation\")[0].style.opacity = \"1\"; \r\n      }\r\n      , 15000);\r\n    }  \r\n \r\n /**\r\n  * @method imageHomepage : Affichage de l'image de fond * Background image display\r\n  */\r\n  const imageHomepage=()=>{\r\n    return (\r\n      <div id=\"depart\" className=\"tousLiens imageFond all\" style={{\"height\":\"100vh\",\"width\":\"100vw\", \"overflow\":\"hidden\"}}>\r\n        <img src={config.img + \"webDev.jpg\"} style={{\"height\": \"100%\", \"width\":\"100%\"}} alt=\"image Geek :)\"/>\r\n      </div>)    \r\n  }\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">\r\n      <Navigation />\r\n      {imageHomepage()}\r\n      {startDisplay()}\r\n      <Presentation/>\r\n      <Formation/>\r\n      <Technologie/>\r\n      <Portfolio/>\r\n      <Contact/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}