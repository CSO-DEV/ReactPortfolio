{"version":3,"sources":["lib/scrollTo.js","assets/Navigation/TopNavigationBar1.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["scrollTo","id","topPos","document","getElementById","offsetTop","window","top","behavior","webkitOverflowScrolling","TopNavigationBar1","props","globalHeight","textColor","backgroundColor","navBarPosition","height","size","color","data","propos","contenuSection","burgerDisplay","navCenterUlFlexDirection","navCenterUlHeight","navCenterUlPosition","navCenterUlTop","navCenterUlWidth","navCenterUlOverflow","navCenterUlBorder","navCenterUlDisplay","navCenterUltransitionProperty","navCenterUltransitionDuration","navCenterUltransitionTimingFunction","navCenterLiWidth","navCenterLiPaddingLeft","navCenterLiMarginBottom","navLeftRightUlLeft","navLeftRightUlWidth","navLeftRightUltransitionProperty","navLeftRightUltransitionDuration","navLeftRightUltransitionTimingFunction","navLeftRightLiWidth","sectionList","Object","keys","useState","innerWidth","windowWidth","setWindowWidth","navCheck","setNavCheck","addEventListener","e","length","style","position","width","zIndex","fontWeight","display","flexDirection","justifyContent","padding","alignItems","type","onClick","boxShadow","onMouseOver","target","cursor","onMouseLeave","onFocus","onBlur","textAlign","borderRadius","border","outline","src","config","img","className","alt","overflow","transitionProperty","transitionDuration","transitionTimingFunction","margin","textDecoration","listStyleType","left","map","element","index","key","lineHeight","paddingLeft","marginLeft","marginRight","marginBottom","borderTop","navCenterLiBorderTop","lienSection","scrollToId","split","textTransform","nomSection","Presentation","shortData","Card","Body","dangerouslySetInnerHTML","__html","textePropos","Formation","formations","lienMenu","Header","logoFormation","nomFormation","dateFormation","objectifFormation","href","siteFormation","title","nomSite","rel","ListGroup","variant","Item","commentaireFormation","titreFormation","lienTitre","doc","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","useEffect","carouselAnimation","carousel","global","getElementsByClassName","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","nom","transition","clearTimeout","interval","startCarouselTimeout","setTimeout","carouselNext","forEach","maxWidth","fontSize","name","source","float","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","i","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","getElementsByName","offsetHeight","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Homepage","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"09RAYeA,EARC,SAACC,GACb,IAAIC,EAASC,SAASC,eAAeH,GAAII,UACzCC,OAAON,SAAS,CACbO,IAAKL,EACLM,SAAU,SACVC,wBAAyB,WC6ZjBC,MAjaf,SAA2BC,GAOvB,IAAIC,EAAcC,EAAUC,EAAgBC,EAC7BH,EAAfD,EAAMK,OAAsBL,EAAMM,KAAoB,GACxCJ,EAAdF,EAAMO,MAAkBP,EAAME,UAAsB,QAC5BC,EAAxBH,EAAMG,gBAAkCH,EAAMG,gBAAkC,QACzDC,EAAvBJ,EAAMI,eAAgCJ,EAAMI,eAAgC,SAK1DI,EAAKC,OAAOC,eAAe,GAA7C,IAaIC,EACAC,EAAyBC,EAAkBC,EAAoBC,EAAeC,EAAiBC,EAAoBC,EAAkBC,EACzIC,EAA8BC,EAA8BC,EACxDC,EAAiBC,EAA6CC,EAC9DC,EAAmBC,EACvBC,EAAiCC,EAAiCC,EAC9DC,EAlBEC,EAAaC,OAAOC,KAAK1B,GAjBD,EAsBM2B,mBAASxC,OAAOyC,YAtBtB,mBAsBzBC,EAtByB,KAsBZC,EAtBY,OAuBAH,qBAvBA,mBAuBzBI,EAvByB,KAuBfC,EAvBe,KAmP9B,OA9MA7C,OAAO8C,iBAAiB,UAAS,SAACC,GAC9BJ,EAAe3C,OAAOyC,eAGvBC,EAAY,KACX1B,EAAc,OACdC,EAAyB,SACzBE,EAAoB,WACpBC,EAAed,EACfe,EAAiBrB,OAAOyC,WACxBb,EAAiB5B,OAAOyC,WACxBL,EAAoBpC,OAAOyC,WAC3BZ,EAAuB,OACvBX,EAAkB,MAClBI,EAAoB,SACpBQ,EAAwB,MACxBN,EAAmB,SAEnBR,EAAc,OACdC,EAAyB,MACzBE,EAAoB,WACpBE,EAAiB,OACjBS,EAAwB,MACxBZ,EAAkB,OAClBK,EAAmB,OACnBC,EAAmB,QAGnBkB,EAAY,MAAQE,IACpB1B,EAAkB,MAClBK,EAAmB,OACnBE,EAA8B,SAC9BC,EAA8B,OAC9BC,EAAoC,OACpCH,EAAmB,OAGnBO,EAAmBW,GADnBV,EAAoB,GAEpBC,EAAiC,MACjCC,EAAiC,OACjCC,EAAuC,OACvCC,EAAoBpC,OAAOyC,YAE3BC,EAAY,KAAOE,IACnBrB,EAAmB,+BACnBL,GAAoBoB,OAAOC,KAAK1B,GAAMmC,OAAO,IAAM,EAAO1C,EAAa,KACvEmB,EAA8B,SAC9BC,EAA8B,OAC9BC,EAAoC,OACpCH,EAAmB,OAGnBO,EAAmBW,GADnBV,EAAoB,KAEpBC,EAAiC,MACjCC,EAAiC,OACjCC,EAAuC,OACvCC,EAAoB,KAuJpB,yBACAa,MAAO,CACHC,SAAU,QACVC,MAAOT,EACPU,OAAQ,MAEU,WAAjB3C,EACD,yBACIwC,MAAO,CACHvC,OAAOJ,EACPE,gBAAgBA,EAChB6C,WAAW,SACXC,QAAQ,OACRC,cAAc,MACdC,eAAe,WACfN,SAAS,WACTO,QAAQ,sBAGR,yBACA9D,GAAG,SACHsD,MAAO,CACPE,MAAO7C,EACPI,OAAOJ,EACPgD,QAAQtC,EACRwC,eAAgB,SAChBE,WAAY,WAGR,4BACA/D,GAAG,UACHgE,KAAK,SAELC,QAAS,WACLf,GAAaD,GACb/C,SAASC,eAAe,aAAamD,MAAMY,UAAU,QACzDC,YAAa,SAACf,GACVlD,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMe,OAAO,UAClDnE,SAASC,eAAe,aAAamD,MAAMY,UAAU,wBACzDI,aAAc,SAAClB,GACXlD,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMe,OAAO,OAClDnE,SAASC,eAAe,aAAamD,MAAMY,UAAU,QACzDK,QAAS,SAACnB,GACNlD,SAASC,eAAe,aAAamD,MAAMY,UAAU,wBACzDM,OAAQ,SAACpB,GACLlD,SAASC,eAAe,aAAamD,MAAMY,UAAU,QACzDZ,MAAO,CACHmB,UAAU,SACVjB,MAAO,MACPkB,aAAa,MACbC,OAAO,OACP9D,gBAAgB,cAChB+D,QAAQ,SAER,yBACA5E,GAAG,YACH6E,IAAKC,EAAOC,IAAM,aAClBC,UAAU,SACV1B,MAAO,CACHE,MAAO,OACPkB,aAAa,OAEjBO,IAAI,kBAGR,wBACAjF,GAAG,cACHsD,MAAO,CACHM,cAActC,EACdP,OAAOQ,EACP2D,SAASvD,EACT4B,SAAS/B,EACTlB,IAAImB,EACJ+B,MAAM9B,EACNb,gBAAgBA,EAChBsE,mBAAmBrD,EACnBsD,mBAAmBrD,EACnBsD,yBAAyBrD,EACzB2C,OAAQ/C,EACRmC,WAAY,SACZD,QAAQ,IACRwB,OAAO,IACPC,eAAe,OACfC,cAAe,OACf7B,QAAQ9B,EACR4D,KAAM,QAxOnB/C,EAAYgD,KAAI,SAACC,EAAQC,GAC5B,GAAGA,EAAMlD,EAAYW,OAAO,EACpB,OACI,wBACAwC,IAAKF,EAAUC,EACf5F,GAAI,KAAO2F,EAAUC,EACrBtC,MAAO,CACHvC,OAAOJ,EAAa,IACpBmF,WAAWnF,EAAa,GACxB6C,MAAMvB,EACN8D,YAAY7D,EACZyB,QAAQ,OACRE,eAAgB,aAChBE,WAAY,SACZiC,WAAW,OACXC,YAAY,OACZC,aAAa/D,EACbgE,eAlFoBC,IAsFpB,yBACA9C,MAAO,CACHK,QAAQ,OACRC,cAAc,SACdG,WAAY,WAEZ,4BACA/D,GAAI,gBAAkBkB,EAAKyE,GAASU,YACpCpC,QAAS,SAACb,GACNkD,EAAWlD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAC9CrD,GAAY,IAChBiB,YAAa,SAACf,GACVlD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAME,MAAO,MACvGtD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAMzC,gBAAiB,OAErHyD,aAAc,SAAClB,GACXlD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAME,MAAO,KACvGtD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAMzC,gBAAiB,eAErH0D,QAAS,SAACnB,GACNlD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAME,MAAO,MACvGtD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAMzC,gBAAiB,OAErH2D,OAAQ,SAACpB,GACLlD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAME,MAAO,KACvGtD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAMzC,gBAAiB,eAErHyC,MAAO,CACHvC,OAAOJ,EAAa,IACpBM,MAAML,EACN4F,cAAe,YACf7B,OAAO,OACP9D,gBAAgB,cAChB+D,QAAQ,gBACR1D,EAAKyE,GAASc,YAClB,yBACAzG,GAAI,yBAA2BkB,EAAKyE,GAASU,YAC7C/C,MAAO,CACHE,MAAM,KACNzC,OAAO,MACPF,gBAAgB,cAChBsE,mBAAmB,MACnBC,mBAAmB,OACnBC,yBAAyB,iBA+KjD,yBACA/B,MAAO,CACHvC,OAAOJ,EACPE,gBAAgBA,EAChB6C,WAAW,SACXC,QAAQ,OACRC,cAAc,MACdC,eAAe,WACfN,SAAS,WACTO,QAAQ,sBAGT,yBACA9D,GAAG,SACHsD,MAAO,CACPE,MAAO,OACPzC,OAAOJ,EACPgD,QAAQtC,EACRwC,eAAgB,SAChBE,WAAY,WAGR,4BACA/D,GAAG,UAEHiE,QAAS,kBAAIf,GAAaD,IAC1BkB,YAAa,SAACf,GACVlD,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMe,OAAO,WACtDC,aAAc,SAAClB,GACXlD,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMe,OAAO,QACtDf,MAAO,CACNmB,UAAU,SACVjB,MAAO,MACPkB,aAAa,MACbC,OAAO,OACP9D,gBAAgB,cAChB+D,QAAQ,SAEL,yBACA5E,GAAG,YACH6E,IAAKC,EAAOC,IAAM,aAClBC,UAAU,SACV1B,MAAO,CACHE,MAAO,OACPkB,aAAa,OAEjBO,IAAI,kBAGZ,wBACCjF,GAAG,iBACHsD,MAAO,CAEHM,cAActC,EAEd4D,SAASvD,EACT4B,SAAS/B,EACTlB,IAAImB,EAAe,GACnB+B,MAAMnB,EACNxB,gBAAgBA,EAChB8D,OAAQ/C,EACR2D,eAAe,OACfC,cAAe,OACf7B,QAAQ,OAERI,WAAY,WACZD,QAAQ,IACRwB,OAAO,IACPG,KAAKrD,EACL+C,mBAAmB7C,EACnB8C,mBAAmB7C,EACnB8C,yBAAyB7C,IA1O9BE,EAAYgD,KAAI,SAACC,EAAQC,GAC5B,GAAGA,EAAMlD,EAAYW,OAAO,EACpB,OACI,wBACAwC,IAAKF,EAAUC,EACf5F,GAAI,KAAO2F,EAAUC,EACrBtC,MAAO,CACHvC,OAAOJ,EAAa,IACpBmF,WAAWnF,EAAa,GACxB6C,MAAMf,EACNsD,YAAY7D,EACZyB,QAAQ,OACRE,eAAgB,aAChBE,WAAY,SACZiC,WAAW,OACXC,YAAY,OACZC,aAAa/D,EACbgE,eA9JoBC,IAiKpB,yBACA9C,MAAO,CACHK,QAAQ,OACRC,cAAc,SACdG,WAAY,WAEZ,4BACA/D,GAAI,gBAAkBkB,EAAKyE,GAASU,YAEpCpC,QAAS,SAACb,GACNkD,EAAWlD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAC9CrD,GAAY,IAChBiB,YAAa,SAACf,GACVlD,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMe,OAAS,UACpDnE,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMiC,eAAgB,OAC3DrF,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAME,MAAO,MACvGtD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAMzC,gBAAiB,OAErHyD,aAAc,SAAClB,GACXlD,SAASC,eAAeiD,EAAEgB,OAAOpE,IAAIsD,MAAMe,OAAS,OACpDnE,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAME,MAAO,KACvGtD,SAASC,eAAe,yBAA2BiD,EAAEgB,OAAOpE,GAAGuG,MAAM,iBAAiB,IAAIjD,MAAMzC,gBAAiB,eAErHyC,MAAO,CACHvC,OAAOJ,EAAa,IACpBM,MAAML,EACN4F,cAAe,YACf7B,OAAO,OACP9D,gBAAgB,cAChB+D,QAAQ,gBACR1D,EAAKyE,GAASc,YAClB,yBACAzG,GAAI,yBAA2BkB,EAAKyE,GAASU,YAC7C/C,MAAO,CACHE,MAAM,KACNzC,OAAO,MACPF,gBAAgB,cAChBsE,mBAAmB,MACnBC,mBAAmB,OACnBC,yBAAyB,mB,gBCvM9CqB,MA7Bf,SAAsBhG,GAKpB,IAAIiG,EAAYzF,EAAKC,OAKrB,OACE,6BAASnB,GAAI2G,EAAUN,YAAarB,UAAU,0CAC5C,yBAAKA,UAAU,UACb,kBAAC4B,EAAA,EAAD,CAAM5B,UAAU,qBACd,kBAAC4B,EAAA,EAAKC,KAAN,KACE,4BAAKF,EAAUF,YACf,yBAAKK,wBAAyB,CAAEC,OAAQJ,EAAUvF,eAAe,GAAG4F,YAAY,QAIpF,kBAACJ,EAAA,EAAD,CAAM5B,UAAU,wBACd,kBAAC4B,EAAA,EAAKC,KAAN,KACA,yBAAKC,wBAAyB,CAAEC,OAAQJ,EAAUvF,eAAe,GAAG4F,YAAY,W,wBCyE3EC,MA7Ff,SAAmBvG,GAIjB,IAAIiG,EAAYzF,EAAKgG,WAgFrB,OACE,6BAASlH,GAAI2G,EAAUN,YAAarB,UAAU,sCAC5C,yBAAKA,UAAU,UACb,wBAAIA,UAAU,gBAAgB2B,EAAUF,YACxC,yBAAKzB,UAAU,kBA7EZ2B,EAAUvF,eAAesE,KAAI,SAACC,EAASC,GAC5C,OACE,yBAAKZ,UAAU,WAAWa,IAAKF,EAAQwB,SAAWvB,GAChD,yBAAK5F,GAAI2F,EAAQwB,SAAUnC,UAAU,KACrC,kBAAC4B,EAAA,EAAD,CAAM5B,UAAU,iBAAiBa,IAAKF,EAAQwB,SAAWvB,GACvD,kBAACgB,EAAA,EAAKQ,OAAN,KACE,yBAAKpC,UAAU,iBACb,yBACEH,IAAKC,EAAOC,IAAMY,EAAQ0B,cAC1BrC,UAAU,YACVC,IAAK,QAAUU,EAAQ2B,eAEzB,yBAAKtC,UAAU,aACb,0BAAMA,UAAU,oBACbW,EAAQ2B,cAEX,8BAAO3B,EAAQ4B,eACf,8BAAO5B,EAAQ6B,mBACf,8BACE,uBACEC,KAAM9B,EAAQ+B,cACdtD,OAAO,SACPuD,MAAO,aAAehC,EAAQiC,QAC9B5C,UAAU,WACV6C,IAAI,uBAEHlC,EAAQiC,aAMnB,kBAACE,EAAA,EAAD,CAAWC,QAAQ,SACjB,kBAACD,EAAA,EAAUE,KAAX,CACEhD,UAAU,uBACV8B,wBAAyB,CACvBC,OAAQpB,EAAQsC,wBAGpB,kBAACH,EAAA,EAAUE,KAAX,CAAgBhD,UAAU,oBACpBW,EAAQuC,eAYXxC,KAAI,SAACC,EAASC,GACvB,OACE,yBAAKC,IAAKF,EAAQwC,UAAYvC,GAC5B,uBACE6B,KAAM3C,EAAOsD,IAAMzC,EAAQwC,UAC3B/D,OAAO,SACPJ,KAAK,kBACL6D,IAAI,uBAEJ,kBAAC,IAAD,MACClC,EAAQ0C,yB,YCwKRC,MArPf,SAAkB5H,GAWlB,IAAI6H,EAAK7H,EAAM8H,WAXU,EAYA,CAAC9H,EAAM+H,WAAW/H,EAAMgI,aAA5CC,EAZoB,KAYXC,EAZW,KAarBC,EAAYnI,EAAMmI,YAClBC,EAAcpI,EAAMqI,SACpBC,EAAkC,KAAjBT,EAAKlF,OAAO,GAAW,IAK5C4F,qBAAU,WACRC,OAUF,IAAMA,EAAkB,WAEtB,IAAIC,EAAS,GACbA,EAASC,OAAOlJ,SAASmJ,uBAAuB,iBAAmBR,GAAa,GAChFM,EAASG,UAAUpJ,SAASmJ,uBAAuB,oBAAsBR,GAAa,GACtFM,EAASI,GAAGrJ,SAASmJ,uBAAuB,aAAeR,GAAa,GACxEM,EAASK,OAAO,CACdC,QAAQvJ,SAASmJ,uBAAuB,kBAAoBR,GAAa,GACzEa,QAAQxJ,SAASmJ,uBAAuB,mBAAqBR,GAAa,IAE5EM,EAASQ,aAAe,EACxBR,EAASS,MAAMT,EAASI,GAAGM,SAXD,IAcrBC,EAAqB,IAAVJ,EAAeZ,EAmB/B,SAASiB,EAAcC,GAErB9J,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMrC,MAAM,UACpEf,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMI,WAAW,SAEzEyF,EAASQ,YAAYK,EACrB9J,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMrC,MAAM,UACpEf,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMI,WAAW,SAEzEoG,EAAW,IACXX,EAASI,GAAGjG,MAAM4G,WAAa,cAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,IAC9DQ,aAAahB,EAASiB,UA8DxB,SAASC,IAEPF,aAAahB,EAASiB,UACpBjB,EAASiB,SAAWE,YAAW,WA5B9BnB,EAASQ,aAAa,GAAKR,EAASQ,YAAYpB,EAAKlF,SACtDnD,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMrC,MAAM,UACpEf,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMI,WAAW,UAI3EyF,EAASQ,cACNR,EAASQ,aAAeR,EAASS,MAAMvG,QACxC8F,EAASQ,YAAc,EACvBR,EAASI,GAAGjG,MAAM4G,WAAa,OAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,IAC9DG,EAAW,MAEXA,EAAW,IACXX,EAASI,GAAGjG,MAAM4G,WAAa,cAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,KAGhEzJ,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMrC,MAAM,UACpEf,SAASC,eAAeoI,EAAKY,EAASQ,aAAaM,KAAK3G,MAAMI,WAAW,SAEvE2G,MASEP,GA/FAX,EAASK,OAAOC,SAAWC,IACjCP,EAASK,OAAOE,QAAQvG,iBAAiB,SAAS,SAASC,GAgDzD+F,EAASQ,cACNR,EAASQ,cAAe,GACzBR,EAASQ,YAAcR,EAASS,MAAMvG,OAAO,EAC7C8F,EAASI,GAAGjG,MAAM4G,WAAa,OAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,MAE9DG,EAAW,IACXX,EAASI,GAAGjG,MAAM4G,WAAa,cAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,IAC9DU,QAxDFlB,EAASK,OAAOC,QAAQtG,iBAAiB,SAAS,SAASC,IA8B7D,WACE+F,EAASQ,cACNR,EAASQ,aAAeR,EAASS,MAAMvG,QACxC8F,EAASQ,YAAc,EACvBR,EAASI,GAAGjG,MAAM4G,WAAa,OAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,IAC9DG,EAAW,MAEXA,EAAW,IACXX,EAASI,GAAGjG,MAAM4G,WAAa,cAC/Bf,EAASI,GAAGjG,MAAMmC,KAAoC,IAAvB0D,EAASQ,aAAd,EAAoC,KAEhEU,IA1C+DE,OAG/DhC,EAAKiC,SAAQ,SAAC7E,EAAQC,GACpB1F,SAASC,eAAewF,EAAQsE,KAAK9G,iBAAiB,aAAY,SAASC,GAAG2G,EAAcnE,MAC5F1F,SAASC,eAAewF,EAAQsE,KAAK9G,iBAAiB,cAAa,SAASC,GAAGiH,OAC/EnK,SAASC,eAAewF,EAAQsE,KAAK9G,iBAAiB,WAAU,SAASC,GAAG2G,EAAcnE,SAK5FyE,KAwIF,OACE,yBACArF,UAAW,iBAAmB6D,EAC9BvF,MAAO,CACLK,QAAQ,OACRE,eAAgB,SAChBc,OAAQ,wBAGPmE,EACD,4BACE9D,UAAW,mBAAqB6D,EAChCvF,MAAO,CACLqB,OAAO,MACP5D,OAAO,OACPyC,MAAM,SALV,KASE,qCAEF,yBACEwB,UAAW,oBAAsB6D,EACjCvF,MAAO,CACLE,MAAOmF,EACP8B,SAAU,SACVvF,SAAU,WA9ChB,wBACAF,UAAW,aAAe6D,EAC1BvF,MAAO,CACLkC,cAAe,OACfjC,SAAU,WACVC,MAAOwF,EACPjI,OAAO,OACPuE,OAAQ,IACRxB,QAAS,IACT4G,SAAU,IACVjG,UAAW,SAhCN8D,EAAK7C,KAAI,SAACC,EAAQC,GACvB,OACA,wBACEZ,UAAW,aAAgB6D,EAC3BhD,IAAK,aAAegD,EAAcjD,EAClC+E,KAAM,aAAehF,EAAQsE,KAE7B,yBACApF,IAAKC,EAAOC,IAAMY,EAAQiF,OAC1B3F,IAAKU,EAAQsE,IACbU,KAAMhF,EAAQsE,IACd3G,MAAO,CACLuH,MAAO,OACPrH,MAAOmF,EACP5H,OAAQ6H,WA2DXE,EACD,4BACE9D,UAAW,kBAAoB6D,EAC/BvF,MAAO,CACLqB,OAAO,MACP5D,OAAO,OACPyC,MAAM,SALV,KAUE,uC,QC3GOsH,MAjIf,SAAqBpK,GAInB,IAAIiG,EAAYzF,EAAK6J,OAmGrB,OACE,6BACA/K,GAAI2G,EAAUN,YACdrB,UAAU,oDAER,yBACAA,UAAU,UAGJ,wBACAA,UAAU,gBAEP2B,EAAUF,YAEjB,yBACAzB,UAAU,cACVhF,GAAG,eA1GA2G,EAAUvF,eAAesE,KAAI,SAACC,EAASC,GAC5C,IAAIoF,EAAU,GAKX,OAJHrF,EAAQsF,YAAYT,SAAQ,SAAAU,GAC1BF,EAAUG,KAAK,CAAClB,IAAKiB,EAAGE,UAAYR,OAAOM,EAAGG,gBAEhDL,EAAUG,KAAK,CAAClB,IAAKtE,EAAQsF,YAAY,GAAGG,UAAYR,OAAOjF,EAAQsF,YAAY,GAAGI,aAElF,yBAAKrG,UAAU,kBAAkBa,IAAKF,EAAQwB,SAAWvB,GACvD,kBAACgB,EAAA,EAAD,CACE5G,GAAI2F,EAAQwB,SACZnC,UAAU,eAEV,kBAAC4B,EAAA,EAAKQ,OAAN,KACE,yBAAKpC,UAAU,eACb,kBAAC,EAAD,CACA6D,YAAajD,EACb4C,WAAYwC,EACZvC,WAAW,OACXC,YAAY,OACZK,UAAU,IAEV,0BAAM/D,UAAU,oBACbW,EAAQ2F,mBAIf,kBAACxD,EAAA,EAAD,CAAWC,QAAQ,SAAmBpC,EAAQsF,YAWxCvF,KAAI,SAACC,EAASC,GAC1B,OACE,kBAACkC,EAAA,EAAUE,KAAX,CACAnC,IAAKF,EAAQyF,UAAYxF,EACzBZ,UAAU,aAER,yBAAKA,UAAU,cAsBvB,SAAoBuG,GAKlB,IAJA,IAAIC,EAAUC,KAAKC,MAAMH,EAAM,IAC3BI,EAAa,EAAEH,EAEfI,EAAS,GACLC,EAAE,EAAEA,EAAEL,EAAUK,IACtBD,EAAST,KAAK,KAEhB,IAAI,IAAIU,EAAE,EAAEA,EAAEF,EAAaE,IACzBD,EAAST,KAAK,KAEhB,OAAOS,EAASlG,KAAI,SAACC,EAAQC,GAC3B,MAAa,MAAVD,EACM,kBAAC,IAAD,CAAY1E,MAVT,UAU2B4E,IAAKF,EAAUC,IAG7C,kBAAC,IAAD,CAAe3E,MAbZ,UAa8B4E,IAAKF,EAAUC,OArClDkG,CAAWnG,EAAQoG,eAEtB,yBAAK/G,UAAU,aACb,0BACEA,UAAU,YACVhF,GAAI2F,EAAQyF,UACZT,KAAMhF,EAAQyF,UAAYxF,GAEzBD,EAAQyF,0B,gBC6EVY,MA7If,SAAmBtL,GAIjB,IAAIiG,EAAYzF,EAAK+K,OAgIrB,OACE,6BAASjM,GAAI2G,EAAUN,YAAarB,UAAU,sCAC5C,yBAAKA,UAAU,UACb,wBAAIA,UAAU,gBAAgB2B,EAAUF,YACxC,yBAAKzB,UAAU,kBAxHZ2B,EAAUvF,eAAesE,KAAI,SAACC,EAASC,GAC5C,OACE,yBACA5F,GAAI,oBAAsB4F,EAC1BZ,UAAU,oBACVa,IAAKF,EAAQwB,SAAWvB,GAExB,kBAACgB,EAAA,EAAD,CACE5G,GAAI2F,EAAQwB,SACZnC,UAAU,iBACVa,IAAKF,EAAQwB,SAAWvB,GAExB,kBAACgB,EAAA,EAAKQ,OAAN,KACE,yBAAKpC,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKH,IAAKC,EAAOC,IAAMY,EAAQuG,YAAalH,UAAU,iBAAkBC,IAAK,QAAUU,EAAQuG,eAEjG,yBAAKlH,UAAU,kBACb,0BAAMA,UAAU,oBAAoBW,EAAQwG,WAC5C,8BAAOxG,EAAQyG,cAEjB,kBAACC,EAAA,EAAD,CACErM,GAAI,SAAW4F,EACf+E,KAAMhF,EAAQ2G,SAAW1G,EACzBZ,UAAW,kBACXf,QAAS,SAACb,IAsCtB,SAAmBA,GAMf,IALF,IAAImJ,EAAsBrM,SAASC,eAAeiD,EAAEgB,OAAOuG,MACvD6B,EAAoBtM,SAASC,eAAeiD,EAAEgB,OAAOpE,IACrDyM,EAAuBvM,SAASmJ,uBAAuB,mBAGhDwC,EAAE,EAAEA,EAAEY,EAAqBpJ,OAAOwI,IACrC3L,SAASC,eAAesM,EAAqBZ,GAAG7L,MAAMwM,IACxDtM,SAASC,eAAesM,EAAqBZ,GAAG7L,IAAI0M,UAAY,mBAChExM,SAASC,eAAesM,EAAqBZ,GAAGlB,MAAMrH,MAAMvC,OAAS,KAK3E,GAAoC,qBAAhCyL,EAAkBE,UAGjB,OAFHH,EAAoBjJ,MAAMvC,OAASb,SAASyM,kBAAkBvJ,EAAEgB,OAAOpE,IAAI,GAAG4M,aAAe,UAC7FJ,EAAkBE,UAAY,UAII,WAAhCF,EAAkBE,YACpBH,EAAoBjJ,MAAMvC,OAAS,IACnCyL,EAAkBE,UAAY,oBA3DpBG,CAAUzJ,KALd,sBAYJ,kBAAC0E,EAAA,EAAD,CACEC,QAAQ,QACR/H,GAAI2F,EAAQ2G,SAAW1G,EACvBZ,UAAU,QAEV,yBACEA,UAAU,kBACV2F,KAAM,SAAW/E,GACjB,uBAAGZ,UAAU,uBAAuBW,EAAQmH,gBAC5C,8BAAOnH,EAAQoH,mBACf,uBAAG/H,UAAU,uBAAb,gBACA,8BAAOW,EAAQqH,cACf,uBAAGhI,UAAU,uBAAb,SACA,yBAAKA,UAAU,mBAA8BW,EAAQsH,UAiD3CvH,KAAI,SAACC,EAASC,GAC9B,OACE,yBAAKC,IAAKF,EAAQuH,OAAStH,GACzB,kBAAC,IAAD,MACA,uBACE6B,KAAM9B,EAAQwH,QACdxF,MAAO,eAAiBhC,EAAQuH,OAChC9I,OAAO,SACPyD,IAAI,uBAEHlC,EAAQuH,wB,MCxGRE,MAhBf,SAAkB1M,GAKhB,OACE,yBAAKsE,UAAU,WAAWhF,GAAG,YAC3B,kBAAC,EAAD,CACAgB,KAAM,KACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHSqM,MAXf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWH,QCHjBI,QACW,cAA7BnN,OAAOoN,SAASC,UAEe,UAA7BrN,OAAOoN,SAASC,UAEhBrN,OAAOoN,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5N,SAASC,eAAe,SDyHpB,kBAAmB4N,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7a4ae101.chunk.js","sourcesContent":["/**\r\n * @function scrollTo Permet de lancer un déplacement type scroll vers l'id désigné\r\n * @var offset Calcul la distance entre le haut de la page et l'id désigné\r\n */\r\nconst scrollTo =(id)=>{\r\n    let topPos = document.getElementById(id).offsetTop;\r\n    window.scrollTo({\r\n       top: topPos,\r\n       behavior: 'smooth',\r\n       webkitOverflowScrolling: \"touch\",\r\n      })\r\n}\r\nexport default scrollTo;","import React,{useState} from 'react';\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport scrollToId from \"../../lib/scrollTo\"\r\n\r\nfunction TopNavigationBar1(props) {\r\n    \r\n    /**\r\n     * @param globalHeight : Hauteur de la barre de navigation\r\n     * @param textColor : Hauteur de la barre de navigation\r\n     * @param backgroundColor : Hauteur de la barre de navigation\r\n     */\r\n    let globalHeight, textColor,backgroundColor,navBarPosition;\r\n    props.height ? globalHeight=props.size : globalHeight=50;\r\n    props.color ? textColor=props.textColor : textColor=\"black\";\r\n    props.backgroundColor ? backgroundColor=props.backgroundColor : backgroundColor=\"ivory\";\r\n    props.navBarPosition ? navBarPosition=props.navBarPosition : navBarPosition=\"center\";\r\n    /**\r\n     * @var shortData : Données extraites BDD * DB extracted data\r\n     * @var sectionList : Liste des clés de la BDD * DB keys list\r\n     */\r\n    const shortData = data.propos.contenuSection[0];\r\n    const sectionList= Object.keys(data)\r\n\r\n    /**\r\n     * @useState : contrôle du render * render control\r\n     */\r\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    let [navCheck, setNavCheck] = useState();\r\n\r\n    /**\r\n     * @WindowSize : Affichage des styles suivant la largeur de la fenetre * Display styles according to the window width\r\n     */\r\n\r\n    let burgerDisplay;\r\n    let navCenterUlFlexDirection,navCenterUlHeight,navCenterUlPosition,navCenterUlTop,navCenterUlWidth,navCenterUlOverflow,navCenterUlBorder,navCenterUlDisplay,\r\n    navCenterUltransitionProperty,navCenterUltransitionDuration,navCenterUltransitionTimingFunction;\r\n    let navCenterLiWidth,navCenterLiPaddingLeft,navCenterLiBorderTop, navCenterLiMarginBottom;\r\n    let navLeftRightUlLeft,navLeftRightUlWidth,\r\n    navLeftRightUltransitionProperty,navLeftRightUltransitionDuration,navLeftRightUltransitionTimingFunction;\r\n    let navLeftRightLiWidth;\r\n\r\n    window.addEventListener('resize',(e)=>{\r\n        setWindowWidth(window.innerWidth);\r\n      });\r\n    \r\n    if(windowWidth<900){\r\n        burgerDisplay=\"flex\";\r\n        navCenterUlFlexDirection=\"column\";\r\n        navCenterUlPosition=\"absolute\";\r\n        navCenterUlTop=globalHeight;\r\n        navCenterUlWidth=window.innerWidth;\r\n        navCenterLiWidth=window.innerWidth;\r\n        navLeftRightLiWidth=window.innerWidth;\r\n        navCenterLiPaddingLeft=\"50px\";\r\n        navCenterUlHeight=\"0px\";\r\n        navCenterUlOverflow=\"hidden\";\r\n        navCenterLiMarginBottom=\"5px\";\r\n        navCenterUlDisplay=\"none\";\r\n    }else{\r\n        burgerDisplay=\"none\";\r\n        navCenterUlFlexDirection=\"row\";\r\n        navCenterUlPosition=\"relative\";\r\n        navCenterUlWidth=\"auto\";\r\n        navCenterLiMarginBottom=\"0px\"\r\n        navCenterUlHeight=\"auto\";\r\n        navCenterUlBorder= \"none\"; \r\n        navCenterUlDisplay=\"flex\" ;   \r\n    };\r\n\r\n    if (windowWidth<900 && !navCheck){\r\n        navCenterUlHeight=\"0px\";\r\n        navCenterUlBorder= \"none\";\r\n        navCenterUltransitionProperty=\"height\";\r\n        navCenterUltransitionDuration=\"0.5s\";\r\n        navCenterUltransitionTimingFunction=\"ease\";\r\n        navCenterUlDisplay=\"none\";\r\n\r\n        navLeftRightUlWidth=0;\r\n        navLeftRightUlLeft=windowWidth-navLeftRightUlWidth;\r\n        navLeftRightUltransitionProperty=\"all\";\r\n        navLeftRightUltransitionDuration=\"0.5s\";\r\n        navLeftRightUltransitionTimingFunction=\"ease\";\r\n        navLeftRightLiWidth=window.innerWidth;\r\n\r\n    }if(windowWidth<900 && navCheck){\r\n        navCenterUlBorder= \"2px solid rgba(0, 0, 0, 0.3)\";\r\n        navCenterUlHeight=((Object.keys(data).length-1) * (5 + 1 +globalHeight/1.5));\r\n        navCenterUltransitionProperty=\"height\";\r\n        navCenterUltransitionDuration=\"0.5s\";\r\n        navCenterUltransitionTimingFunction=\"ease\";\r\n        navCenterUlDisplay=\"flex\";\r\n\r\n        navLeftRightUlWidth=500;\r\n        navLeftRightUlLeft=windowWidth-navLeftRightUlWidth;\r\n        navLeftRightUltransitionProperty=\"all\";\r\n        navLeftRightUltransitionDuration=\"0.5s\";\r\n        navLeftRightUltransitionTimingFunction=\"ease\";\r\n        navLeftRightLiWidth=500;\r\n    };\r\n    \r\n    const navCenterList=()=>{\r\n        return sectionList.map((element,index)=>{\r\n            if(index<sectionList.length-1){            \r\n                    return(                   \r\n                        <li\r\n                        key={element + index}\r\n                        id={\"li\" + element + index}\r\n                        style={{\r\n                            height:globalHeight/1.5,\r\n                            lineHeight:globalHeight/25,\r\n                            width:navCenterLiWidth,\r\n                            paddingLeft:navCenterLiPaddingLeft,\r\n                            display:\"flex\",\r\n                            justifyContent: \"flex-start\",\r\n                            alignItems: \"center\",\r\n                            marginLeft:\"10px\",\r\n                            marginRight:\"10px\",\r\n                            marginBottom:navCenterLiMarginBottom,\r\n                            borderTop : navCenterLiBorderTop,\r\n                       \r\n                        }}\r\n                        >\r\n                            <div\r\n                            style={{\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                alignItems: \"center\",\r\n                            }}>                       \r\n                                <button\r\n                                id={\"navCenterLien\" + data[element].lienSection} \r\n                                onClick={(e)=>{\r\n                                    scrollToId(e.target.id.split(\"navCenterLien\")[1]);\r\n                                    setNavCheck(false)}}        \r\n                                onMouseOver={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"90%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"red\";                                                   \r\n                                }}\r\n                                onMouseLeave={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"0%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"transparent\";  \r\n                                }}\r\n                                onFocus={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"90%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"red\";\r\n                                }}\r\n                                onBlur={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"0%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"transparent\"; \r\n                                }}\r\n                                style={{\r\n                                    height:globalHeight/1.5,\r\n                                    color:textColor,\r\n                                    textTransform: \"uppercase\",\r\n                                    border:'none', \r\n                                    backgroundColor:\"transparent\",\r\n                                    outline:\"transparent\",               \r\n                                }}>{data[element].nomSection}</button>\r\n                                <div \r\n                                id={\"navCenterLienUnderline\" + data[element].lienSection}\r\n                                style={{\r\n                                    width:\"0%\",\r\n                                    height:\"2px\",\r\n                                    backgroundColor:\"transparent\",\r\n                                    transitionProperty:\"all\",\r\n                                    transitionDuration:\"0.5s\",\r\n                                    transitionTimingFunction:\"ease\",\r\n                                }}\r\n                                ></div>\r\n                            </div>                        \r\n                        </li>               \r\n                    )               \r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    const navLeftRightList=()=>{\r\n        return sectionList.map((element,index)=>{\r\n            if(index<sectionList.length-1){            \r\n                    return(                   \r\n                        <li\r\n                        key={element + index}\r\n                        id={\"li\" + element + index}\r\n                        style={{\r\n                            height:globalHeight/1.5,\r\n                            lineHeight:globalHeight/25,\r\n                            width:navLeftRightLiWidth,//\"500px\", //navCenterLiWidth,\r\n                            paddingLeft:navCenterLiPaddingLeft,\r\n                            display:\"flex\",\r\n                            justifyContent: \"flex-start\",\r\n                            alignItems: \"center\",\r\n                            marginLeft:\"10px\",\r\n                            marginRight:\"10px\",\r\n                            marginBottom:navCenterLiMarginBottom,\r\n                            borderTop : navCenterLiBorderTop,                       \r\n                        }}\r\n                        >\r\n                            <div\r\n                            style={{\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                alignItems: \"center\",\r\n                            }}>                       \r\n                                <button\r\n                                id={\"navCenterLien\" + data[element].lienSection} \r\n                                //href=\"#\"\r\n                                onClick={(e)=>{\r\n                                    scrollToId(e.target.id.split(\"navCenterLien\")[1]);\r\n                                    setNavCheck(false)}}        \r\n                                onMouseOver={(e)=>{\r\n                                    document.getElementById(e.target.id).style.cursor = \"pointer\";\r\n                                    document.getElementById(e.target.id).style.textDecoration =\"none\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"90%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"red\";                                                   \r\n                                }}\r\n                                onMouseLeave={(e)=>{\r\n                                    document.getElementById(e.target.id).style.cursor = \"none\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"0%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"transparent\";  \r\n                                }}\r\n                                style={{\r\n                                    height:globalHeight/1.5,\r\n                                    color:textColor,\r\n                                    textTransform: \"uppercase\",\r\n                                    border:'none', \r\n                                    backgroundColor:\"transparent\",\r\n                                    outline:\"transparent\"                      \r\n                                }}>{data[element].nomSection}</button>\r\n                                <div \r\n                                id={\"navCenterLienUnderline\" + data[element].lienSection}\r\n                                style={{\r\n                                    width:\"0%\",\r\n                                    height:\"2px\",\r\n                                    backgroundColor:\"transparent\",\r\n                                    transitionProperty:\"all\",\r\n                                    transitionDuration:\"0.5s\",\r\n                                    transitionTimingFunction:\"ease\",\r\n                                }}\r\n                                ></div>\r\n                            </div>                        \r\n                        </li>               \r\n                    )               \r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div\r\n        style={{\r\n            position: \"fixed\",\r\n            width: windowWidth,\r\n            zIndex: \"2\",\r\n        }}>\r\n            {navBarPosition===\"center\" ? \r\n            <nav\r\n                style={{\r\n                    height:globalHeight,\r\n                    backgroundColor:backgroundColor,\r\n                    fontWeight:\"bolder\",\r\n                    display:\"flex\",\r\n                    flexDirection:\"row\",\r\n                    justifyContent:\"flex-end\",\r\n                    position:\"relative\",\r\n                    padding:\"0px 20px 0px 20px\",\r\n    \r\n                }}>\r\n                    <div\r\n                    id=\"burger\"\r\n                    style={{\r\n                    width: globalHeight,\r\n                    height:globalHeight,\r\n                    display:burgerDisplay,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\", \r\n                                        \r\n                    }}>\r\n                        <button\r\n                        id=\"imgLien\"\r\n                        type=\"button\"\r\n                        //href=\"#\"\r\n                        onClick={()=>{\r\n                            setNavCheck(!navCheck);\r\n                            document.getElementById(\"imgBurger\").style.boxShadow=\"none\"}}\r\n                        onMouseOver={(e)=>{\r\n                            document.getElementById(e.target.id).style.cursor=\"pointer\";\r\n                            document.getElementById(\"imgBurger\").style.boxShadow=\"1px 1px 10px 1px red\";}}\r\n                        onMouseLeave={(e)=>{\r\n                            document.getElementById(e.target.id).style.cursor=\"none\";\r\n                            document.getElementById(\"imgBurger\").style.boxShadow=\"none\"}}  \r\n                        onFocus={(e)=>{\r\n                            document.getElementById(\"imgBurger\").style.boxShadow=\"1px 1px 10px 1px red\";}}\r\n                        onBlur={(e)=>{\r\n                            document.getElementById(\"imgBurger\").style.boxShadow=\"none\"}}                                                 \r\n                        style={{\r\n                            textAlign:\"center\",\r\n                            width: \"90%\",\r\n                            borderRadius:\"50%\",\r\n                            border:'none', \r\n                            backgroundColor:\"transparent\",\r\n                            outline:\"none\"  \r\n                        }}>\r\n                            <img \r\n                            id=\"imgBurger\"\r\n                            src={config.img + \"burger.png\"} \r\n                            className=\"burger\"\r\n                            style={{\r\n                                width: \"100%\", \r\n                                borderRadius:\"50%\",                           \r\n                            }}\r\n                            alt=\"Menu burger\"/>\r\n                        </button>\r\n                    </div>\r\n                        <ul\r\n                        id=\"navCenterUl\"\r\n                        style={{\r\n                            flexDirection:navCenterUlFlexDirection,\r\n                            height:navCenterUlHeight,\r\n                            overflow:navCenterUlOverflow,\r\n                            position:navCenterUlPosition,\r\n                            top:navCenterUlTop,\r\n                            width:navCenterUlWidth,\r\n                            backgroundColor:backgroundColor,\r\n                            transitionProperty:navCenterUltransitionProperty,\r\n                            transitionDuration:navCenterUltransitionDuration,\r\n                            transitionTimingFunction:navCenterUltransitionTimingFunction,\r\n                            border: navCenterUlBorder,\r\n                            alignItems: \"center\",\r\n                            padding:\"0\",\r\n                            margin:\"0\",\r\n                            textDecoration:\"none\",\r\n                            listStyleType :\"none\",\r\n                            display:navCenterUlDisplay,//\"flex\",\r\n                            left: \"0px\",                                 \r\n                        }}>\r\n                        {navCenterList()}\r\n                        </ul>              \r\n            </nav>\r\n           \r\n            :\r\n            <nav\r\n            style={{\r\n                height:globalHeight,\r\n                backgroundColor:backgroundColor,\r\n                fontWeight:\"bolder\",\r\n                display:\"flex\",\r\n                flexDirection:\"row\",\r\n                justifyContent:\"flex-end\",\r\n                position:\"relative\",\r\n                padding:\"0px 20px 0px 20px\",\r\n\r\n           }}>\r\n               <div\r\n               id=\"burger\"\r\n               style={{\r\n               width: \"100%\", //globalHeight,\r\n               height:globalHeight,\r\n               display:burgerDisplay,\r\n               justifyContent: \"center\",\r\n               alignItems: \"center\", \r\n                                  \r\n               }}>\r\n                   <button\r\n                   id=\"imgLien\"\r\n                   //href=\"#\"\r\n                   onClick={()=>setNavCheck(!navCheck)}\r\n                   onMouseOver={(e)=>{\r\n                       document.getElementById(e.target.id).style.cursor=\"pointer\"}}\r\n                   onMouseLeave={(e)=>{\r\n                       document.getElementById(e.target.id).style.cursor=\"none\"}}                        \r\n                   style={{\r\n                    textAlign:\"center\",\r\n                    width: \"90%\",\r\n                    borderRadius:\"50%\",\r\n                    border:'none', \r\n                    backgroundColor:\"transparent\",\r\n                    outline:\"none\"  \r\n                   }}>\r\n                       <img \r\n                       id=\"imgBurger\"\r\n                       src={config.img + \"burger.png\"} \r\n                       className=\"burger\"\r\n                       style={{\r\n                           width: \"100%\", \r\n                           borderRadius:\"50%\",                           \r\n                       }}\r\n                       alt=\"Menu burger\"/>\r\n                   </button>\r\n               </div>\r\n               <ul\r\n                id=\"navLeftRightUl\"\r\n                style={{\r\n\r\n                    flexDirection:navCenterUlFlexDirection,\r\n                    //height:navCenterUlHeight,\r\n                    overflow:navCenterUlOverflow,\r\n                    position:navCenterUlPosition,\r\n                    top:navCenterUlTop+10,\r\n                    width:navLeftRightUlWidth,//navCenterUlWidth,\r\n                    backgroundColor:backgroundColor,\r\n                    border: navCenterUlBorder,\r\n                    textDecoration:\"none\",\r\n                    listStyleType :\"none\",\r\n                    display:\"flex\",\r\n                    //left: \"0px\",\r\n                    alignItems: \"flex-end\",\r\n                    padding:\"0\",\r\n                    margin:\"0\",\r\n                    left:navLeftRightUlLeft,\r\n                    transitionProperty:navLeftRightUltransitionProperty,\r\n                    transitionDuration:navLeftRightUltransitionDuration,\r\n                    transitionTimingFunction:navLeftRightUltransitionTimingFunction,\r\n\r\n                }}>\r\n                {navLeftRightList()}</ul>             \r\n           </nav>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopNavigationBar1;","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section id={shortData.lienSection} className=\"presentation tousLiens tailleEcran all\">\r\n      <div className=\"centre\">\r\n        <Card className=\"textePresentation\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"textePresentationInf\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                  alt={\"Logo \" + element.nomFormation}\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"formation tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance && preview){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\";\r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n      document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\"\r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\" key={element.lienMenu + index}>\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"              \r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map((element,index)=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor} key={element + index}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor} key={element + index}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie tousLiens chargement tailleEcran all\"\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div \r\n        id={\"unitPortfolioCard\" + index}\r\n        className=\"unitPortfolioCard\"\r\n        key={element.lienMenu + index}\r\n        >\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}          \r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div className=\"imgProjet\">\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div \r\n              className=\"detailPortfolio\"\r\n              name={\"button\" + index}>\r\n              <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <div className=\"githubPortfolio\">{githubList(element.GitProjet)}</div>\r\n              \r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   * \r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";           \r\n          }\r\n        }\r\n      \r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = document.getElementsByName(e.target.id)[0].offsetHeight + \"px\";\r\n        moreCloseButtonId.innerText = \"Fermer\"; \r\n           return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"portfolio tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React from \"react\";\r\nimport TopNavigationBar from \"../../assets/Navigation/TopNavigationBar1\";\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">\r\n      <TopNavigationBar\r\n      size={80}/>\r\n      <Presentation/>\r\n      <Formation/>\r\n      <Technologie/>\r\n      <Portfolio/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}