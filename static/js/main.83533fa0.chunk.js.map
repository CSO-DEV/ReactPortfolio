{"version":3,"sources":["assets/Navigation/Navigation1.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navigation1","props","shortData","data","propos","contenuSection","className","startNavigation","fixedNavigationBar","style","display","margin","width","src","config","img","photoPropos","alt","nomPropos","borderRadius","position","alignItems","fontSize","fontWeight","textTransform","titrePropos","type","id","for","Presentation","lienSection","Card","Body","nomSection","dangerouslySetInnerHTML","__html","textePropos","Formation","formations","map","element","index","key","lienMenu","Header","logoFormation","nomFormation","dateFormation","objectifFormation","href","siteFormation","target","title","nomSite","rel","ListGroup","variant","Item","commentaireFormation","titreFormation","lienTitre","doc","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","length","useEffect","carouselAnimation","carousel","global","document","getElementsByClassName","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","getElementById","nom","color","transition","left","clearTimeout","interval","startCarouselTimeout","setTimeout","addEventListener","e","carouselNext","forEach","justifyContent","border","height","maxWidth","overflow","listStyleType","padding","textAlign","name","source","float","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","i","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","onClick","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","getElementsByName","offsetHeight","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Homepage","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"++RAyHeA,MAlHf,SAAqBC,GAInB,IAAIC,EAAYC,EAAKC,OAAOC,eAAe,GA+FzC,OACI,6BACI,yBAAKC,UAAU,wBACdC,GAED,yBAAKD,UAAU,2BACdE,GAED,yBAAKF,UAAU,oBAlFjB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACfG,MAAO,CACHC,QAAQ,SAEV,yBAAKJ,UAAU,sBACfG,MAAO,CACHE,OAAO,MACPC,MAAO,SAEP,yBACAC,IAAKC,EAAOC,IAAMb,EAAUc,YAAaC,IAAK,gBAAkBf,EAAUgB,UAC1ET,MAAO,CACHU,aAAa,MACbP,MAAO,WAGf,yBAAKN,UAAU,uBACfG,MAAO,CACHE,OAAO,MACPS,SAAU,WACVR,MAAO,QACPF,QAAS,OACTW,WAAY,WAEZ,yBAAKf,UAAU,qBACfG,MAAO,IAGH,wBACJA,MAAO,CACHE,OAAO,IACPW,SAAS,SACLpB,EAAUgB,WAClB,wBACAT,MAAO,CACHE,OAAO,IACPW,SAAS,OACTC,WAAW,SACXC,cAAe,cACXtB,EAAUuB,gBAIxB,2BAAOC,KAAK,WAAWC,GAAG,cAC1B,yBAAKrB,UAAU,WACX,2BAAOsB,IAAI,aACT,yBAAKf,IAAKC,EAAOC,IAAM,aAAcT,UAAU,aAGrD,yBAAKA,UAAU,aACX,2BACAsB,IAAI,YACJD,GAAG,SACHrB,UAAU,YAHV,cAIA,2BACAsB,IAAI,YACJD,GAAG,aACHrB,UAAU,YAHV,kBAIA,2BACAsB,IAAI,YACJD,GAAG,eACHrB,UAAU,YAHV,oBAIA,2BACAsB,IAAI,YACJD,GAAG,YACHrB,UAAU,YAHV,sB,gBCzDHuB,MA7Bf,SAAsB5B,GAKpB,IAAIC,EAAYC,EAAKC,OAKrB,OACE,6BAASuB,GAAIzB,EAAU4B,YAAaxB,UAAU,0CAC5C,yBAAKA,UAAU,UACb,kBAACyB,EAAA,EAAD,CAAMzB,UAAU,qBACd,kBAACyB,EAAA,EAAKC,KAAN,KACE,4BAAK9B,EAAU+B,YACf,yBAAKC,wBAAyB,CAAEC,OAAQjC,EAAUG,eAAe,GAAG+B,YAAY,QAIpF,kBAACL,EAAA,EAAD,CAAMzB,UAAU,wBACd,kBAACyB,EAAA,EAAKC,KAAN,KACA,yBAAKE,wBAAyB,CAAEC,OAAQjC,EAAUG,eAAe,GAAG+B,YAAY,W,wBCwE3EC,MA5Ff,SAAmBpC,GAIjB,IAAIC,EAAYC,EAAKmC,WA+ErB,OACE,6BAASX,GAAIzB,EAAU4B,YAAaxB,UAAU,sCAC5C,yBAAKA,UAAU,UACb,wBAAIA,UAAU,gBAAgBJ,EAAU+B,YACxC,yBAAK3B,UAAU,kBA5EZJ,EAAUG,eAAekC,KAAI,SAACC,EAASC,GAC5C,OACE,yBAAKnC,UAAU,WAAWoC,IAAKF,EAAQG,SAAWF,GAChD,yBAAKd,GAAIa,EAAQG,SAAUrC,UAAU,KACrC,kBAACyB,EAAA,EAAD,CAAMzB,UAAU,iBAAiBoC,IAAKF,EAAQG,SAAWF,GACvD,kBAACV,EAAA,EAAKa,OAAN,KACE,yBAAKtC,UAAU,iBACb,yBACEO,IAAKC,EAAOC,IAAMyB,EAAQK,cAC1BvC,UAAU,cAEZ,yBAAKA,UAAU,aACb,0BAAMA,UAAU,oBACbkC,EAAQM,cAEX,8BAAON,EAAQO,eACf,8BAAOP,EAAQQ,mBACf,8BACE,uBACEC,KAAMT,EAAQU,cACdC,OAAO,SACPC,MAAO,aAAeZ,EAAQa,QAC9B/C,UAAU,WACVgD,IAAI,uBAEHd,EAAQa,aAMnB,kBAACE,EAAA,EAAD,CAAWC,QAAQ,SACjB,kBAACD,EAAA,EAAUE,KAAX,CACEnD,UAAU,uBACV4B,wBAAyB,CACvBC,OAAQK,EAAQkB,wBAGpB,kBAACH,EAAA,EAAUE,KAAX,CAAgBnD,UAAU,oBACpBkC,EAAQmB,eAYXpB,KAAI,SAACC,EAASC,GACvB,OACE,yBAAKC,IAAKF,EAAQoB,UAAYnB,GAC5B,uBACEQ,KAAMnC,EAAO+C,IAAMrB,EAAQoB,UAC3BT,OAAO,SACPzB,KAAK,kBACL4B,IAAI,uBAEJ,kBAAC,IAAD,MACCd,EAAQsB,yB,YCyKRC,MArPf,SAAkB9D,GAWlB,IAAI+D,EAAK/D,EAAMgE,WAXU,EAYA,CAAChE,EAAMiE,WAAWjE,EAAMkE,aAA5CC,EAZoB,KAYXC,EAZW,KAarBC,EAAYrE,EAAMqE,YAClBC,EAActE,EAAMuE,SACpBC,EAAkC,KAAjBT,EAAKU,OAAO,GAAW,IAK5CC,qBAAU,WACRC,OAUF,IAAMA,EAAkB,WAEtB,IAAIC,EAAS,GACbA,EAASC,OAAOC,SAASC,uBAAuB,iBAAmBV,GAAa,GAChFO,EAASI,UAAUF,SAASC,uBAAuB,oBAAsBV,GAAa,GACtFO,EAASK,GAAGH,SAASC,uBAAuB,aAAeV,GAAa,GACxEO,EAASM,OAAO,CACdC,QAAQL,SAASC,uBAAuB,kBAAoBV,GAAa,GACzEe,QAAQN,SAASC,uBAAuB,mBAAqBV,GAAa,IAE5EO,EAASS,aAAe,EACxBT,EAASU,MAAMV,EAASK,GAAGM,SAXD,IAcrBC,EAAqB,IAmB1B,SAASC,EAAcC,GAErBZ,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMqF,MAAM,UACpEf,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMc,WAAW,SAEzEsD,EAASS,YAAYK,EACrBZ,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMqF,MAAM,UACpEf,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMc,WAAW,SAEzEkE,EAAW,IACXZ,EAASK,GAAGzE,MAAMsF,WAAa,cAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,IAC9DW,aAAapB,EAASqB,UA8DxB,SAASC,IAEPF,aAAapB,EAASqB,UACpBrB,EAASqB,SAAWE,YAAW,WA5B9BvB,EAASS,aAAa,GAAKT,EAASS,YAAYtB,EAAKU,SACtDK,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMqF,MAAM,UACpEf,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMc,WAAW,UAI3EsD,EAASS,cACNT,EAASS,aAAeT,EAASU,MAAMb,QACxCG,EAASS,YAAc,EACvBT,EAASK,GAAGzE,MAAMsF,WAAa,OAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,IAC9DG,EAAW,MAEXA,EAAW,IACXZ,EAASK,GAAGzE,MAAMsF,WAAa,cAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,KAGhEP,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMqF,MAAM,UACpEf,SAASa,eAAe5B,EAAKa,EAASS,aAAaO,KAAKpF,MAAMc,WAAW,SAEvE4E,MASEV,GA/FAZ,EAASM,OAAOC,UACtBP,EAASM,OAAOE,QAAQgB,iBAAiB,SAAS,SAASC,GAgDzDzB,EAASS,cACNT,EAASS,cAAe,GACzBT,EAASS,YAAcT,EAASU,MAAMb,OAAO,EAC7CG,EAASK,GAAGzE,MAAMsF,WAAa,OAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,MAE9DG,EAAW,IACXZ,EAASK,GAAGzE,MAAMsF,WAAa,cAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,IAC9Da,QAxDFtB,EAASM,OAAOC,QAAQiB,iBAAiB,SAAS,SAASC,IA8B7D,WACEzB,EAASS,cACNT,EAASS,aAAeT,EAASU,MAAMb,QACxCG,EAASS,YAAc,EACvBT,EAASK,GAAGzE,MAAMsF,WAAa,OAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,IAC9DG,EAAW,MAEXA,EAAW,IACXZ,EAASK,GAAGzE,MAAMsF,WAAa,cAC/BlB,EAASK,GAAGzE,MAAMuF,KAAoC,IAAvBnB,EAASS,aAAd,EAAoC,KAEhEa,IA1C+DI,OAG/DvC,EAAKwC,SAAQ,SAAChE,EAAQC,GACpBsC,SAASa,eAAepD,EAAQqD,KAAKQ,iBAAiB,aAAY,SAASC,GAAGZ,EAAcjD,MAC5FsC,SAASa,eAAepD,EAAQqD,KAAKQ,iBAAiB,cAAa,SAASC,GAAGH,OAC/EpB,SAASa,eAAepD,EAAQqD,KAAKQ,iBAAiB,WAAU,SAASC,GAAGZ,EAAcjD,SAK5F0D,KAwIF,OACE,yBACA7F,UAAW,iBAAmBgE,EAC9B7D,MAAO,CACLC,QAAQ,OACR+F,eAAgB,SAChBC,OAAQ,wBAGPnC,EACD,4BACEjE,UAAW,mBAAqBgE,EAChC7D,MAAO,CACLiG,OAAO,MACPC,OAAO,OACP/F,MAAM,SALV,KASE,qCAEF,yBACEN,UAAW,oBAAsBgE,EACjC7D,MAAO,CACLG,MAAOwD,EACPwC,SAAU,SACVC,SAAU,WA9ChB,wBACAvG,UAAW,aAAegE,EAC1B7D,MAAO,CACLqG,cAAe,OACf1F,SAAU,WACVR,MAAO6D,EACPkC,OAAO,OACPhG,OAAQ,IACRoG,QAAS,IACTzF,SAAU,IACV0F,UAAW,SAhCNhD,EAAKzB,KAAI,SAACC,EAAQC,GACvB,OACA,wBACEnC,UAAW,aAAgBgE,EAC3B5B,IAAK,aAAe4B,EAAc7B,EAClCwE,KAAM,aAAezE,EAAQqD,KAE7B,yBACAhF,IAAKC,EAAOC,IAAMyB,EAAQ0E,OAC1BjG,IAAKuB,EAAQqD,IACboB,KAAMzE,EAAQqD,IACdpF,MAAO,CACL0G,MAAO,OACPvG,MAAOwD,EACPuC,OAAQtC,WA2DXE,EACD,4BACEjE,UAAW,kBAAoBgE,EAC/B7D,MAAO,CACLiG,OAAO,MACPC,OAAO,OACP/F,MAAM,SALV,KAUE,uC,QC1GOwG,MAlIf,SAAqBnH,GAInB,IAAIC,EAAYC,EAAKkH,OAoGrB,OACE,6BACA1F,GAAIzB,EAAU4B,YACdxB,UAAU,oDAER,yBACAA,UAAU,UAGJ,wBACAA,UAAU,gBAEPJ,EAAU+B,YAEjB,yBACA3B,UAAU,cACVqB,GAAG,eA3GAzB,EAAUG,eAAekC,KAAI,SAACC,EAASC,GAC5C,IAAI6E,EAAU,GAKX,OAJH9E,EAAQ+E,YAAYf,SAAQ,SAAAgB,GAC1BF,EAAUG,KAAK,CAAC5B,IAAK2B,EAAGE,UAAYR,OAAOM,EAAGG,gBAEhDL,EAAUG,KAAK,CAAC5B,IAAKrD,EAAQ+E,YAAY,GAAGG,UAAYR,OAAO1E,EAAQ+E,YAAY,GAAGI,aAElF,yBAAKrH,UAAU,mBACb,kBAACyB,EAAA,EAAD,CACEJ,GAAIa,EAAQG,SACZrC,UAAU,cACVoC,IAAKF,EAAQG,SAAWF,GAExB,kBAACV,EAAA,EAAKa,OAAN,KACE,yBAAKtC,UAAU,eACb,kBAAC,EAAD,CACAgE,YAAa7B,EACbwB,WAAYqD,EACZpD,WAAW,OACXC,YAAY,OACZK,UAAU,IAEV,0BAAMlE,UAAU,oBACbkC,EAAQoF,mBAIf,kBAACrE,EAAA,EAAD,CAAWC,QAAQ,SAAmBhB,EAAQ+E,YAWxChF,KAAI,SAACC,EAASC,GAC1B,OACE,kBAACc,EAAA,EAAUE,KAAX,CACAf,IAAKF,EAAQkF,UAAYjF,EACzBnC,UAAU,aAER,yBAAKA,UAAU,cAsBvB,SAAoBuH,GAKlB,IAJA,IAAIC,EAAUC,KAAKC,MAAMH,EAAM,IAC3BI,EAAa,EAAEH,EAEfI,EAAS,GACLC,EAAE,EAAEA,EAAEL,EAAUK,IACtBD,EAAST,KAAK,KAEhB,IAAI,IAAIU,EAAE,EAAEA,EAAEF,EAAaE,IACzBD,EAAST,KAAK,KAEhB,OAAOS,EAAS3F,KAAI,SAAAC,GAClB,MAAa,MAAVA,EACM,kBAAC,IAAD,CAAYsD,MAVT,YAaH,kBAAC,IAAD,CAAeA,MAbZ,eAxBLsC,CAAW5F,EAAQ6F,eAEtB,yBAAK/H,UAAU,aACb,0BACEA,UAAU,YACVqB,GAAIa,EAAQkF,UACZT,KAAMzE,EAAQkF,UAAYjF,GAEzBD,EAAQkF,0B,gBC4EVY,MA7If,SAAmBrI,GAIjB,IAAIC,EAAYC,EAAKoI,OAgIrB,OACE,6BAAS5G,GAAIzB,EAAU4B,YAAaxB,UAAU,sCAC5C,yBAAKA,UAAU,UACb,wBAAIA,UAAU,gBAAgBJ,EAAU+B,YACxC,yBAAK3B,UAAU,kBAxHZJ,EAAUG,eAAekC,KAAI,SAACC,EAASC,GAC5C,OACE,yBACAd,GAAI,oBAAsBc,EAC1BnC,UAAU,oBACVoC,IAAKF,EAAQG,SAAWF,GAExB,kBAACV,EAAA,EAAD,CACEJ,GAAIa,EAAQG,SACZrC,UAAU,iBACVoC,IAAKF,EAAQG,SAAWF,GAExB,kBAACV,EAAA,EAAKa,OAAN,KACE,yBAAKtC,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKO,IAAKC,EAAOC,IAAMyB,EAAQgG,YAAalI,UAAU,iBAAkBW,IAAK,QAAUuB,EAAQgG,eAEjG,yBAAKlI,UAAU,kBACb,0BAAMA,UAAU,oBAAoBkC,EAAQiG,WAC5C,8BAAOjG,EAAQkG,cAEjB,kBAACC,EAAA,EAAD,CACEhH,GAAI,SAAWc,EACfwE,KAAMzE,EAAQoG,SAAWnG,EACzBnC,UAAW,kBACXuI,QAAS,SAACvC,IAsCtB,SAAmBA,GAMf,IALF,IAAIwC,EAAsB/D,SAASa,eAAeU,EAAEnD,OAAO8D,MACvD8B,EAAoBhE,SAASa,eAAeU,EAAEnD,OAAOxB,IACrDqH,EAAuBjE,SAASC,uBAAuB,mBAGhDmD,EAAE,EAAEA,EAAEa,EAAqBtE,OAAOyD,IACrCpD,SAASa,eAAeoD,EAAqBb,GAAGxG,MAAMoH,IACxDhE,SAASa,eAAeoD,EAAqBb,GAAGxG,IAAIsH,UAAY,mBAChElE,SAASa,eAAeoD,EAAqBb,GAAGlB,MAAMxG,MAAMkG,OAAS,KAK3E,GAAoC,qBAAhCoC,EAAkBE,UAGjB,OAFHH,EAAoBrI,MAAMkG,OAAS5B,SAASmE,kBAAkB5C,EAAEnD,OAAOxB,IAAI,GAAGwH,aAAe,UAC7FJ,EAAkBE,UAAY,UAII,WAAhCF,EAAkBE,YACpBH,EAAoBrI,MAAMkG,OAAS,IACnCoC,EAAkBE,UAAY,oBA3DpBG,CAAU9C,KALd,sBAYJ,kBAAC/C,EAAA,EAAD,CACEC,QAAQ,QACR7B,GAAIa,EAAQoG,SAAWnG,EACvBnC,UAAU,QAEV,yBACEA,UAAU,kBACV2G,KAAM,SAAWxE,GACjB,uBAAGnC,UAAU,uBAAuBkC,EAAQ6G,gBAC5C,8BAAO7G,EAAQ8G,mBACf,uBAAGhJ,UAAU,uBAAb,gBACA,8BAAOkC,EAAQ+G,cACf,uBAAGjJ,UAAU,uBAAb,SACA,yBAAKA,UAAU,mBAA8BkC,EAAQgH,UAiD3CjH,KAAI,SAACC,EAASC,GAC9B,OACE,yBAAKC,IAAKF,EAAQiH,OAAShH,GACzB,kBAAC,IAAD,MACA,uBACEQ,KAAMT,EAAQkH,QACdtG,MAAO,eAAiBZ,EAAQiH,OAChCtG,OAAO,SACPG,IAAI,uBAEHd,EAAQiH,wB,MCrGRE,MAjBf,SAAkB1J,GAOhB,OACE,yBAAKK,UAAU,WAAWqB,GAAG,YAC3B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNSiI,MAXf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWH,QCHjBI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvF,SAASa,eAAe,SDyHpB,kBAAmB2E,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.83533fa0.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style1.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\n\r\n\r\n\r\nfunction Navigation1(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.propos.contenuSection[0];\r\n\r\n  /**\r\n   * @method startNavigation \r\n   */\r\n    const startNavigation=()=>{\r\n       \r\n    }\r\n\r\n  /**\r\n   * @method fixedNavigationBar \r\n   */\r\n  const fixedNavigationBar=()=>{\r\n       \r\n    }  \r\n    \r\n  /**\r\n   * @method topNavigationBar \r\n   */\r\n  const topNavigationBar=()=>{\r\n      return(\r\n          <div className=\"nav\">\r\n              <div className=\"topNavigationBarTitle\"\r\n              style={{\r\n                  display:\"flex\",\r\n              }}>\r\n                <div className=\"topNavigationBarImg\"\r\n                style={{\r\n                    margin:\"5px\",\r\n                    width: \"77px\",\r\n                }}>\r\n                    <img \r\n                    src={config.img + shortData.photoPropos} alt={\"Photo profil \" + shortData.nomPropos}\r\n                    style={{\r\n                        borderRadius:\"50%\",\r\n                        width: \"100%\",\r\n                    }}/>\r\n                </div>\r\n                <div className=\"topNavigationBarText\"\r\n                style={{\r\n                    margin:\"5px\",\r\n                    position: \"relative\",\r\n                    width: \"400px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                }}>\r\n                    <div className=\"topNavigationBarH1\"\r\n                    style={{\r\n                      \r\n                    }}>\r\n                        <h1 \r\n                    style={{\r\n                        margin:\"0\",\r\n                        fontSize:\"17px\",\r\n                        }}>{shortData.nomPropos}</h1>\r\n                    <h1 \r\n                    style={{\r\n                        margin:\"0\",\r\n                        fontSize:\"27px\",\r\n                        fontWeight:\"bolder\",\r\n                        textTransform: \"uppercase\",\r\n                        }}>{shortData.titrePropos}</h1>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <input type=\"checkbox\" id=\"nav-check\"/>\r\n              <div className=\"nav-btn\">\r\n                  <label for=\"nav-check\">\r\n                    <img src={config.img + \"burger.png\"} className=\"burger\"/>\r\n                  </label>\r\n              </div>\r\n              <div className=\"nav-links\">\r\n                  <label \r\n                  for=\"nav-check\" \r\n                  id=\"propos\" \r\n                  className=\"navItems\">A propos..</label>\r\n                  <label \r\n                  for=\"nav-check\" \r\n                  id=\"formations\" \r\n                  className=\"navItems\">Mes formations</label>    \r\n                  <label \r\n                  for=\"nav-check\" \r\n                  id=\"technologies\" \r\n                  className=\"navItems\">Mes technologies</label>\r\n                  <label \r\n                  for=\"nav-check\" \r\n                  id=\"portfolio\"\r\n                  className=\"navItems\">Mon portfolio</label>            \r\n\r\n              </div>\r\n\r\n          </div>\r\n      )\r\n       \r\n    }  \r\n    return (\r\n        <div>\r\n            <div className=\"startNavigation\">\r\n            {startNavigation()}\r\n            </div>\r\n            <div className=\"fixedNavigationBar\">\r\n            {fixedNavigationBar()}\r\n            </div>\r\n            <div className=\"topNavigationBar\">\r\n            {topNavigationBar()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation1;","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section id={shortData.lienSection} className=\"presentation tousLiens tailleEcran all\">\r\n      <div className=\"centre\">\r\n        <Card className=\"textePresentation\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"textePresentationInf\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Image } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"formation tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\";\r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n      document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\"\r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\">\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"\r\n              key={element.lienMenu + index}\r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map(element=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie tousLiens chargement tailleEcran all\"\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Image, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div \r\n        id={\"unitPortfolioCard\" + index}\r\n        className=\"unitPortfolioCard\"\r\n        key={element.lienMenu + index}\r\n        >\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}          \r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div className=\"imgProjet\">\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div \r\n              className=\"detailPortfolio\"\r\n              name={\"button\" + index}>\r\n              <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <div className=\"githubPortfolio\">{githubList(element.GitProjet)}</div>\r\n              \r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   * \r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";           \r\n          }\r\n        }\r\n      \r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = document.getElementsByName(e.target.id)[0].offsetHeight + \"px\";\r\n        moreCloseButtonId.innerText = \"Fermer\"; \r\n           return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"portfolio tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React from \"react\";\r\nimport Navigation1 from \"../../assets/Navigation/Navigation1\";\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport config from \"../../configData/config.json\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">\r\n      <Navigation1 />\r\n      <Presentation/>\r\n      <Formation/>\r\n      <Technologie/>\r\n      <Portfolio/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}