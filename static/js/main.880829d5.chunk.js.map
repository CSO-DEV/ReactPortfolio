{"version":3,"sources":["lib/scrollTo.js","assets/Navigation/TopNavigationBar.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["scrollTo","id","topPos","document","getElementById","offsetTop","window","top","behavior","TopNavigationBar","props","navBtnDisplay","navLinksDisplay","navLinksPosition","navLinksWidth","navLinksTop","navLinksOverflowY","navLinksHeight","navItemsDisplay","navItemsMarginLeft","navItemsMarginRight","shortData","data","propos","contenuSection","sectionList","Object","keys","useState","innerWidth","windowWidth","setWindowWidth","navCheck","setNavCheck","addEventListener","e","className","style","width","position","zIndex","height","backgroundColor","display","justifyContent","margin","src","config","img","photoPropos","alt","nomPropos","borderRadius","alignItems","fontSize","color","fontWeight","textTransform","titrePropos","type","defaultChecked","onClick","right","htmlFor","onMouseOver","target","cursor","onMouseLeave","overflowY","float","map","element","index","length","lienSection","key","scrollToId","split","marginLeft","marginRight","nomSection","Presentation","Card","Body","dangerouslySetInnerHTML","__html","textePropos","Formation","formations","lienMenu","Header","logoFormation","nomFormation","dateFormation","objectifFormation","href","siteFormation","title","nomSite","rel","ListGroup","variant","Item","commentaireFormation","titreFormation","lienTitre","doc","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","useEffect","carouselAnimation","carousel","global","getElementsByClassName","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","nom","transition","left","clearTimeout","interval","startCarouselTimeout","setTimeout","carouselNext","forEach","border","maxWidth","overflow","listStyleType","padding","textAlign","name","source","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","i","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","getElementsByName","offsetHeight","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Homepage","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.880829d5.chunk.js","sourcesContent":["/**\r\n * @function scrollTo Permet de lancer un déplacement type scroll vers l'id désigné\r\n * @var offset Calcul la distance entre le haut de la page et l'id désigné\r\n */\r\nconst scrollTo =(id)=>{\r\n    let topPos = document.getElementById(id).offsetTop;\r\n    window.scrollTo({\r\n       top: topPos,\r\n       behavior: 'smooth'\r\n      })\r\n}\r\nexport default scrollTo;","import React,{useState} from 'react';\r\n//import \"./style1.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport scrollToId from \"../../lib/scrollTo\"\r\n\r\n\r\nfunction TopNavigationBar(props) {\r\n    \r\n    /**\r\n     * @var shortData : Données extraites BDD * DB extracted data\r\n     * @var sectionList : Liste des clés de la BDD * DB keys list\r\n     */\r\n    const shortData = data.propos.contenuSection[0];\r\n    const sectionList= Object.keys(data)\r\n\r\n    /**\r\n     * @useState : contrôle du render * render control\r\n     */\r\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    let [navCheck, setNavCheck] = useState(false);\r\n\r\n    /**\r\n     * @var navBt.. : Variables de style de la class nav-btn * variables for nav-btn class style\r\n     * @var navLinks.. : Variables de style de la class nav-links * variables for nav-links class style\r\n     * @var navItems.. : Variables de style de la class nav-links * variables for navItems class style\r\n     */\r\n    let navBtnDisplay;\r\n    let navLinksDisplay,navLinksPosition,navLinksWidth,navLinksTop,navLinksOverflowY,navLinksHeight;\r\n    let navItemsDisplay,navItemsMarginLeft,navItemsMarginRight;\r\n\r\n    /**\r\n     * @WindowSize : Affichage des styles suivant la largeur de la fenetre * Display styles according to the window width\r\n     */\r\n    window.addEventListener('resize',(e)=>{\r\n        setWindowWidth(window.innerWidth);\r\n      });\r\n    if(windowWidth<1300){\r\n        navBtnDisplay=\"inline-block\";\r\n        navLinksDisplay=\"block\";\r\n        navLinksPosition=\"absolute\";\r\n        navLinksWidth=\"100%\";\r\n        navLinksTop=\"87px\";\r\n        navLinksOverflowY=\"hidden\";\r\n        navItemsDisplay=\"block\";\r\n        navItemsMarginLeft=\"90px\";\r\n        navItemsMarginRight=\"0px\";\r\n    }else{\r\n        navBtnDisplay=\"none\";\r\n        navLinksDisplay=\"flex\";\r\n        navLinksPosition=\"relative\";\r\n        navLinksWidth=\"auto\";\r\n        navLinksTop=\"auto\";\r\n        navLinksOverflowY=\"auto\";\r\n        //navLinksHeight=\"auto\",\r\n        navItemsDisplay=\"inline-block\";\r\n        navItemsMarginLeft=\"0px\";\r\n        navItemsMarginRight=\"50px\";\r\n    };\r\n\r\n    /**\r\n * @navLinksHeightFunction : Animation de la barre de navigation *Navigation bar animation\r\n     */\r\n    if (windowWidth<1300 && !navCheck){\r\n        navLinksHeight=\"0px\"\r\n    }else{\r\n        navLinksHeight=\"auto\"\r\n    }\r\n      \r\n    /**\r\n    * @function navTitle Afiche le titre * title display\r\n    */\r\n    function navTitle(){\r\n        return(\r\n            <div className=\"topNavigationBarTitle\"\r\n            style={{\r\n                display:\"flex\",\r\n            }}>\r\n            <div className=\"topNavigationBarImg\"\r\n            style={{\r\n                margin:\"5px\",\r\n                width: \"77px\",\r\n            }}>\r\n                <img \r\n                src={config.img + shortData.photoPropos} alt={\"Photo profil \" + shortData.nomPropos}\r\n                style={{\r\n                    borderRadius:\"50%\",\r\n                    width: \"100%\",\r\n                }}/>\r\n            </div>\r\n            <div className=\"topNavigationBarText\"\r\n            style={{\r\n                margin:\"5px\",\r\n                position: \"relative\",\r\n                width: \"400px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <div className=\"topNavigationBarH1\"\r\n                style={{\r\n                    \r\n                }}>\r\n                    <h1 \r\n                style={{\r\n                    margin:\"0\",\r\n                    fontSize:\"17px\",\r\n                    color:\"white\",\r\n                    }}>{shortData.nomPropos}</h1>\r\n                <h1 \r\n                style={{\r\n                    margin:\"0\",\r\n                    fontSize:\"23px\",\r\n                    fontWeight:\"bolder\",\r\n                    textTransform: \"uppercase\",\r\n                    color:\"white\",\r\n                    }}>{shortData.titrePropos}</h1>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    /**\r\n    * @function navItemsList Affiche la liste des items * items list display\r\n    */\r\n    function navItemsList(){\r\n        return sectionList.map((element,index)=>{\r\n            if(index<sectionList.length-1){\r\n                return(\r\n                    <label \r\n                    className=\"navItems\"\r\n                    id={\"nav\" + data[element].lienSection} \r\n                    htmlFor=\"nav-check\"                     \r\n                    key={element + index}\r\n                    onClick={(e)=>scrollToId(e.target.id.split(\"nav\")[1])}\r\n                    onMouseOver={(e)=>{\r\n                        document.getElementById(e.target.id).style.backgroundColor =\"rgba(0, 0, 0, 0.3)\";\r\n                        document.getElementById(e.target.id).style.cursor = \"pointer\";\r\n                    }}\r\n                    onMouseLeave={(e)=>{\r\n                        document.getElementById(e.target.id).style.backgroundColor =\"transparent\";\r\n                        document.getElementById(e.target.id).style.cursor = \"none\";\r\n                    }}                       \r\n                    style={{\r\n                        display: navItemsDisplay,\r\n                        marginLeft:navItemsMarginLeft,\r\n                        color: \"white\",\r\n                        fontSize: \"18px\",\r\n                        height: \"fit-content\",\r\n                        marginRight: navItemsMarginRight,//\r\n                    }}                  \r\n                    >{data[element].nomSection}\r\n                    </label>\r\n                )\r\n            };\r\n            return(<div key={element + index}></div>)        \r\n        })\r\n    };      \r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n */    \r\n    return (\r\n        <div>\r\n            <div \r\n            className=\"topNavigationBar\"\r\n            style={{\r\n                width: \"100%\",\r\n                position:\"fixed\",\r\n                zIndex: \"2\",\r\n            }}>\r\n                <div \r\n                className=\"nav\"\r\n                style={{\r\n                    height: \"87px\",\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#4472c4\",\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                }}\r\n                >\r\n                    {navTitle()}\r\n                    <input \r\n                    type=\"checkbox\" \r\n                    id=\"nav-check\"\r\n                    defaultChecked={navCheck}\r\n                    onClick={()=>{\r\n                        setNavCheck(!navCheck)\r\n                    }}\r\n                    style={{\r\n                        display: \"none\"}}/>\r\n                    <div \r\n                    className=\"nav-btn\"\r\n                    style={{\r\n                        display: navBtnDisplay,\r\n                        position : \"absolute\",\r\n                        top:\"18px\",\r\n                        right:\"0px\",\r\n                        borderRadius :\"50%\",                \r\n                    }}>\r\n                        <label htmlFor=\"nav-check\">\r\n                            <img \r\n                            id=\"burger\"\r\n                            src={config.img + \"burger.png\"} \r\n                            className=\"burger\"\r\n                            style={{\r\n                                width: \"40px\",\r\n                                height: \"34px\",\r\n                                borderRadius: \"50%\",\r\n                            }} \r\n                            onMouseOver={(e)=>document.getElementById(e.target.id).style.cursor=\"pointer\"}\r\n                            onMouseLeave={(e)=>document.getElementById(e.target.id).style.cursor=\"none\"}\r\n                            alt=\"Menu\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div\r\n                    className=\"nav-links\"\r\n                    style={{\r\n                        display: navLinksDisplay,\r\n                        position:navLinksPosition,\r\n                        width:navLinksWidth,\r\n                        top:navLinksTop,\r\n                        overflowY:navLinksOverflowY,\r\n                        height:navLinksHeight,\r\n                        backgroundColor:\"#4472c4\",\r\n                        float: \"right\",\r\n                        fontSize: \"15px\",\r\n                        alignItems: \"center\",                        \r\n                    }}>\r\n                    {navItemsList()}   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopNavigationBar;","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section id={shortData.lienSection} className=\"presentation tousLiens tailleEcran all\">\r\n      <div className=\"centre\">\r\n        <Card className=\"textePresentation\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"textePresentationInf\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                  alt={\"Logo \" + element.nomFormation}\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"formation tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance && preview){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\";\r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n      document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\"\r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\" key={element.lienMenu + index}>\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"              \r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map((element,index)=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor} key={element + index}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor} key={element + index}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie tousLiens chargement tailleEcran all\"\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div \r\n        id={\"unitPortfolioCard\" + index}\r\n        className=\"unitPortfolioCard\"\r\n        key={element.lienMenu + index}\r\n        >\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}          \r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div className=\"imgProjet\">\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div \r\n              className=\"detailPortfolio\"\r\n              name={\"button\" + index}>\r\n              <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <div className=\"githubPortfolio\">{githubList(element.GitProjet)}</div>\r\n              \r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   * \r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";           \r\n          }\r\n        }\r\n      \r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = document.getElementsByName(e.target.id)[0].offsetHeight + \"px\";\r\n        moreCloseButtonId.innerText = \"Fermer\"; \r\n           return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"portfolio tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React from \"react\";\r\nimport TopNavigationBar from \"../../assets/Navigation/TopNavigationBar\";\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">\r\n      <TopNavigationBar/>\r\n      <Presentation/>\r\n      <Formation/>\r\n      <Technologie/>\r\n      <Portfolio/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}