{"version":3,"sources":["lib/scrollTo.js","assets/Navigation/ArrowUpNavigation.js","assets/Navigation/TopNavigationBar.js","assets/Navigation/SideNavigationBar.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["scrollTo","id","topPos","document","getElementById","offsetTop","window","top","behavior","webkitOverflowScrolling","ArrowUpNavigation","props","color","size","width","windowSize","data","underLine","addEventListener","e","scrollY","style","display","Object","keys","forEach","element","index","length","min","lienSection","height","offsetHeight","console","log","idSection","icon","faArrowAltCircleUp","position","left","zIndex","onMouseOver","cursor","onMouseLeave","onClick","scrollToId","TopNavigationBar","globalHeight","textColor","backgroundColor","navBarPosition","burgerDisplay","navCenterUlFlexDirection","navCenterUlHeight","navCenterUlPosition","navCenterUlTop","navCenterUlWidth","navCenterUlOverflow","navCenterUlBorder","navCenterUlDisplay","navCenterUltransitionProperty","navCenterUltransitionDuration","navCenterUltransitionTimingFunction","navCenterLiWidth","navCenterLiPaddingLeft","navCenterLiMarginBottom","shortData","propos","contenuSection","sectionList","useState","innerWidth","windowWidth","setWindowWidth","navCheck","setNavCheck","className","margin","src","config","img","photoPropos","alt","nomPropos","borderRadius","alignItems","fontSize","fontWeight","textTransform","titrePropos","flexDirection","justifyContent","padding","type","boxShadow","target","textAlign","border","overflow","transitionProperty","transitionDuration","transitionTimingFunction","textDecoration","listStyleType","map","key","lineHeight","paddingLeft","marginLeft","marginRight","marginBottom","borderTop","navCenterLiBorderTop","split","onFocus","onBlur","outline","nomSection","innerHeight","SideNavigationBar","Presentation","heightNavBar","paddingTop","Card","Body","dangerouslySetInnerHTML","__html","textePropos","Formation","formations","lienMenu","Header","logoFormation","nomFormation","dateFormation","objectifFormation","href","siteFormation","title","nomSite","rel","ListGroup","variant","Item","commentaireFormation","titreFormation","lienTitre","doc","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","useEffect","carouselAnimation","carousel","global","getElementsByClassName","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","nom","transition","clearTimeout","interval","startCarouselTimeout","setTimeout","carouselNext","maxWidth","name","source","float","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","i","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","getElementsByName","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Homepage","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7c8d35e8.chunk.js","sourcesContent":["/**\r\n * @function scrollTo Permet de lancer un déplacement type scroll vers l'id désigné\r\n * @var offset Calcul la distance entre le haut de la page et l'id désigné\r\n */\r\nconst scrollTo =(id)=>{\r\n    let topPos = document.getElementById(id).offsetTop;\r\n    window.scrollTo({\r\n       top: topPos,\r\n       behavior: 'smooth',\r\n       webkitOverflowScrolling: \"touch\",\r\n      })\r\n}\r\nexport default scrollTo;","import React from 'react';\r\nimport scrollToId from \"../../lib/scrollTo\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ArrowUpNavigation(props) {\r\n    /**\r\n     * @props\r\n     */\r\n    let color=props.color;\r\n    let size=props.width;\r\n    let windowSize=props.windowSize;\r\n    let data=props.data;\r\n    let underLine=props.underLine\r\n\r\n\r\n    window.addEventListener(\"scroll\",(e)=>{\r\n    if(window.scrollY>200){\r\n        document.getElementById('ArrowUp').style.display=\"block\";\r\n    }else{\r\n        document.getElementById('ArrowUp').style.display=\"none\";\r\n    }\r\n    Object.keys(data).forEach((element,index)=>{\r\n        if(index<Object.keys(data).length-1){\r\n            let min=document.getElementById(data[element].lienSection).offsetTop\r\n            let height=document.getElementById(data[element].lienSection).offsetHeight\r\n            console.log(min+height)\r\n            if(window.scrollY>=min && window.scrollY<min+height){\r\n                let idSection=\"navCenterLienUnderline\" & data[element].lienSection\r\n                console.log(idSection)\r\n                //document.getElementById(idSection).style.width =\"90%\";\r\n                //document.getElementById(idSection).style.backgroundColor =underLine;\r\n            }\r\n        }\r\n        \r\n    })\r\n   \r\n  })\r\n \r\n\r\n    return (\r\n        <div>\r\n        <FontAwesomeIcon\r\n        id=\"ArrowUp\"\r\n        icon={faArrowAltCircleUp} \r\n        style={{            \r\n            color:color,\r\n            width:size,\r\n            height:\"auto\",\r\n            position:\"fixed\",\r\n            top:windowSize[1]-(5 + size),\r\n            left:windowSize[0]-(21 + size),\r\n            zIndex:\"5\",\r\n        }}\r\n        onMouseOver={()=>{\r\n            document.getElementById(\"ArrowUp\").style.cursor=\"pointer\";\r\n            document.getElementById(\"ArrowUp\").style.width=size*1.1 + \"px\"\r\n            }}\r\n        onMouseLeave={()=>{\r\n            document.getElementById(\"ArrowUp\").style.cursor=\"none\";\r\n            document.getElementById(\"ArrowUp\").style.width=size + \"px\"\r\n            }}       \r\n        onClick={()=>{\r\n            scrollToId(\"propos\")\r\n            }}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArrowUpNavigation;","import React,{useState,useEffect} from 'react';\r\nimport ArrowUpNavigation from './ArrowUpNavigation'\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport scrollToId from \"../../lib/scrollTo\"\r\nfunction TopNavigationBar(props) {\r\n    \r\n    /**\r\n     * @param globalHeight : Hauteur de la barre de navigation\r\n     * @param textColor : Hauteur de la barre de navigation\r\n     * @param backgroundColor : Hauteur de la barre de navigation\r\n     */\r\n    let globalHeight, textColor,underLine,backgroundColor,navBarPosition;\r\n    props.height ? globalHeight=props.height : globalHeight=50;\r\n    props.color ? textColor=props.color : textColor=\"black\";\r\n    props.underLine ? underLine=props.underLine : underLine=\"red\";\r\n    props.backgroundColor ? backgroundColor=props.backgroundColor : backgroundColor=\"ivory\";\r\n    props.navBarPosition ? navBarPosition=props.navBarPosition : navBarPosition=\"center\";\r\n\r\n    /**\r\n     * @var shortData : Données extraites BDD * DB extracted data\r\n     * @var sectionList : Liste des clés de la BDD * DB keys list\r\n     */\r\n    const shortData = data.propos.contenuSection[0];\r\n    const sectionList= Object.keys(data)\r\n\r\n    /**\r\n     * @useState : contrôle du render * render control\r\n     */\r\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    let [navCheck, setNavCheck] = useState();\r\n\r\n    /**\r\n     * @Style : Variable de style * style variable\r\n     */\r\n    let burgerDisplay;\r\n    let navCenterUlFlexDirection,navCenterUlHeight,navCenterUlPosition,navCenterUlTop,navCenterUlWidth,navCenterUlOverflow,navCenterUlBorder,navCenterUlDisplay,\r\n    navCenterUltransitionProperty,navCenterUltransitionDuration,navCenterUltransitionTimingFunction;\r\n    let navCenterLiWidth,navCenterLiPaddingLeft,navCenterLiBorderTop, navCenterLiMarginBottom;\r\n    \r\n    /**\r\n     * @WindowSize : Affichage des styles suivant la largeur de la fenetre * Display styles according to the window width\r\n     */\r\n    window.addEventListener('resize',(e)=>{\r\n        setWindowWidth(window.innerWidth);\r\n      });\r\n    let windowWidthSize=1000;\r\n\r\n    if(windowWidth<windowWidthSize){\r\n        burgerDisplay=\"flex\";\r\n        navCenterUlFlexDirection=\"column\";\r\n        navCenterUlPosition=\"absolute\";\r\n        navCenterUlTop=globalHeight;\r\n        navCenterUlWidth=window.innerWidth;\r\n        navCenterLiWidth=window.innerWidth;\r\n        navCenterLiPaddingLeft=\"50px\";\r\n        navCenterUlHeight=\"0px\";\r\n        navCenterUlOverflow=\"hidden\";\r\n        navCenterLiMarginBottom=\"5px\";\r\n        navCenterUlDisplay=\"none\";\r\n    }else{\r\n        burgerDisplay=\"none\";\r\n        navCenterUlFlexDirection=\"row\";\r\n        navCenterUlPosition=\"relative\";\r\n        navCenterUlWidth=\"auto\";\r\n        navCenterLiMarginBottom=\"0px\"\r\n        navCenterUlHeight=\"auto\";\r\n        navCenterUlBorder= \"none\"; \r\n        navCenterUlDisplay=\"flex\" ;   \r\n    };\r\n\r\n    if (windowWidth<windowWidthSize && !navCheck){\r\n        navCenterUlHeight=\"0px\";\r\n        navCenterUlBorder= \"none\";\r\n        navCenterUltransitionProperty=\"height\";\r\n        navCenterUltransitionDuration=\"0.5s\";\r\n        navCenterUltransitionTimingFunction=\"ease\";\r\n        navCenterUlDisplay=\"none\";\r\n\r\n    }if(windowWidth<windowWidthSize && navCheck){\r\n        navCenterUlBorder= \"1px solid rgba(0, 0, 0, 0.3)\";\r\n        navCenterUlHeight=((Object.keys(data).length-1) * (5 + 1 +globalHeight/2));\r\n        navCenterUltransitionProperty=\"height\";\r\n        navCenterUltransitionDuration=\"0.5s\";\r\n        navCenterUltransitionTimingFunction=\"ease\";\r\n        navCenterUlDisplay=\"flex\";\r\n    };\r\n\r\n    /**\r\n    *@WindowScroll\r\n    */\r\n\r\n    /**\r\n    * @function navCenterList Afiche la liste des items * items list display\r\n    */\r\n    const navCenterList=()=>{\r\n        return sectionList.map((element,index)=>{\r\n            if(index<sectionList.length-1){            \r\n                    return(                   \r\n                        <li\r\n                        key={element + index}\r\n                        id={\"li\" + element + index}\r\n                        style={{\r\n                            height:globalHeight/1.5,\r\n                            lineHeight:globalHeight/25,\r\n                            width:navCenterLiWidth,\r\n                            paddingLeft:navCenterLiPaddingLeft,\r\n                            display:\"flex\",\r\n                            justifyContent: \"flex-start\",\r\n                            alignItems: \"center\",\r\n                            marginLeft:\"10px\",\r\n                            marginRight:\"10px\",\r\n                            marginBottom:navCenterLiMarginBottom,\r\n                            borderTop : navCenterLiBorderTop,\r\n                       \r\n                        }}\r\n                        >\r\n                            <div\r\n                            style={{\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                alignItems: \"center\",\r\n                            }}>                       \r\n                                <button\r\n                                id={\"navCenterLien\" + data[element].lienSection} \r\n                                onClick={(e)=>{\r\n                                    scrollToId(e.target.id.split(\"navCenterLien\")[1]);\r\n                                    setNavCheck(false)}}        \r\n                                onMouseOver={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"90%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =underLine;                                                   \r\n                                }}\r\n                                onMouseLeave={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"0%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"transparent\";  \r\n                                }}\r\n                                onFocus={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"90%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =underLine;\r\n                                }}\r\n                                onBlur={(e)=>{\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.width =\"0%\";\r\n                                    document.getElementById(\"navCenterLienUnderline\" + e.target.id.split(\"navCenterLien\")[1]).style.backgroundColor =\"transparent\"; \r\n                                }}\r\n                                style={{\r\n                                    height:\"auto\",//(globalHeight/3),\r\n                                    lineHeight:\"normal\",\r\n                                    color:textColor,\r\n                                    textTransform: \"uppercase\",\r\n                                    border:'none', \r\n                                    backgroundColor:\"transparent\",\r\n                                    outline:\"transparent\",               \r\n                                }}>{data[element].nomSection}</button>\r\n                                <div \r\n                                id={\"navCenterLienUnderline\" + data[element].lienSection}\r\n                                style={{\r\n                                    width:\"0%\",\r\n                                    height:\"2px\",\r\n                                    backgroundColor:\"transparent\",\r\n                                    transitionProperty:\"all\",\r\n                                    transitionDuration:\"0.5s\",\r\n                                    transitionTimingFunction:\"ease\",\r\n                                }}\r\n                                ></div>\r\n                            </div>                        \r\n                        </li>               \r\n                    )               \r\n            }\r\n        return (<div key={element + index}></div>); \r\n        })\r\n    }\r\n\r\n    /**\r\n    * @function navTitle Afiche le titre * title display\r\n    */\r\n   function navTitle(){\r\n    return(\r\n        <div className=\"topNavigationBarTitle\"\r\n        style={{\r\n            display:\"flex\",\r\n            position:\"fixed\",\r\n            zIndex:\"5\"\r\n        }}>\r\n          \r\n        <div className=\"topNavigationBarImg\"\r\n        style={{\r\n            margin:\"5px\",\r\n            width: globalHeight-10 + \"px\",\r\n        }}>\r\n            <img \r\n            src={config.img + shortData.photoPropos} alt={\"Photo profil \" + shortData.nomPropos}\r\n            style={{\r\n                borderRadius:\"50%\",\r\n                width: \"100%\",\r\n            }}/>\r\n        </div>\r\n        <div className=\"topNavigationBarText\"\r\n        style={{\r\n            margin:\"5px\",\r\n            position: \"relative\",\r\n            width: \"auto\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <div className=\"topNavigationBarH1\"\r\n            style={{\r\n                \r\n            }}>\r\n                <h1 \r\n            style={{\r\n                margin:\"0\",\r\n                fontSize:\"17px\",\r\n                color:textColor,\r\n                }}>{shortData.nomPropos}</h1>\r\n            <h1 \r\n            style={{\r\n                margin:\"0\",\r\n                fontSize:\"23px\",\r\n                fontWeight:\"bolder\",\r\n                textTransform: \"uppercase\",\r\n                color:textColor,\r\n                }}>{shortData.titrePropos}</h1>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n    };\r\n\r\n    /**\r\n     * @render Construction du DOM * DOM build\r\n    */ \r\n    return (\r\n        <div>            \r\n            <div\r\n            style={{\r\n                position: \"fixed\",\r\n                width: windowWidth,\r\n                zIndex: \"2\",\r\n            }}>\r\n                {navTitle()}\r\n                {navBarPosition===\"center\" ? \r\n                <nav\r\n                    style={{\r\n                        height:globalHeight,\r\n                        backgroundColor:backgroundColor,\r\n                        fontWeight:\"bolder\",\r\n                        display:\"flex\",\r\n                        flexDirection:\"row\",\r\n                        justifyContent:\"flex-end\",\r\n                        position:\"relative\",\r\n                        padding:\"0px 10px\",\r\n                        alignItems: \"center\",    \r\n                    }}>\r\n                        <div\r\n                        id=\"burger\"\r\n                        style={{\r\n                        width: globalHeight,\r\n                        height:globalHeight,\r\n                        display:burgerDisplay,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\", \r\n                                            \r\n                        }}>\r\n                            <button\r\n                            id=\"imgLien\"\r\n                            type=\"button\"\r\n                            onClick={()=>{\r\n                                setNavCheck(!navCheck);\r\n                                document.getElementById(\"imgBurger\").style.boxShadow=\"none\"}}\r\n                            onMouseOver={(e)=>{\r\n                                document.getElementById(e.target.id).style.cursor=\"pointer\";\r\n                            }}\r\n                            onMouseLeave={(e)=>{\r\n                                document.getElementById(e.target.id).style.cursor=\"none\";\r\n                            }}                                               \r\n                            style={{\r\n                                textAlign:\"center\",\r\n                                width: \"fit-content\",\r\n                                border:'1px solid white',\r\n                                borderRadius:\"5px\",\r\n                                backgroundColor:\"transparent\",\r\n                                //outline:\"none\"  \r\n                            }}>\r\n                                <img \r\n                                id=\"imgBurger\"\r\n                                src={config.img + \"burger.png\"} \r\n                                className=\"burger\"\r\n                                style={{\r\n                                    width: globalHeight/2,\r\n                                    height:globalHeight/2,                            \r\n                                }}\r\n                            alt=\"Ouverture du menu\"/>\r\n                            </button>\r\n                        </div>\r\n                            <ul\r\n                            id=\"navCenterUl\"\r\n                            style={{\r\n                                flexDirection:navCenterUlFlexDirection,\r\n                                height:navCenterUlHeight,\r\n                                overflow:navCenterUlOverflow,\r\n                                position:navCenterUlPosition,\r\n                                top:navCenterUlTop,\r\n                                width:navCenterUlWidth,\r\n                                backgroundColor:backgroundColor,\r\n                                transitionProperty:navCenterUltransitionProperty,\r\n                                transitionDuration:navCenterUltransitionDuration,\r\n                                transitionTimingFunction:navCenterUltransitionTimingFunction,\r\n                                border: navCenterUlBorder,\r\n                                alignItems: \"center\",\r\n                                padding:\"0\",\r\n                                margin:\"0\",\r\n                                textDecoration:\"none\",\r\n                                listStyleType :\"none\",\r\n                                display:navCenterUlDisplay,\r\n                                left: \"0px\",                                 \r\n                            }}>\r\n                            {navCenterList()}\r\n                            </ul>              \r\n                </nav>\r\n                :\r\n                <div></div>}                \r\n            </div>\r\n            <ArrowUpNavigation\r\n              color={backgroundColor}\r\n              underLine={underLine}\r\n              width={30}\r\n              windowSize={[window.innerWidth,window.innerHeight]}\r\n              data={data}\r\n              />\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default TopNavigationBar;","import React from 'react';\r\n\r\n\r\n\r\nfunction SideNavigationBar(props) {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideNavigationBar;","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n/**\r\n * @props \r\n */\r\nlet heightNavBar=props.height + \"px\";\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"presentation\"// tousLiens tailleEcran all\"\r\n    style={{\r\n      paddingTop:heightNavBar,\r\n    }}>\r\n      <div className=\"presentationContainer\">\r\n        <Card className=\"presentationText1\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"presentationText2\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n/**\r\n * @props \r\n */\r\nlet heightNavBar=props.height + \"px\";\r\n\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                  alt={\"Logo \" + element.nomFormation}\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"formation\"// tousLiens chargement all\"\r\n    style={{\r\n      paddingTop:heightNavBar,\r\n    }}>\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance && preview){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\";\r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n      document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"normal\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n    document.getElementById(list[carousel.currentItem].nom).style.fontWeight=\"bolder\"\r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n * @props \r\n */\r\n  let heightNavBar=props.height + \"px\";\r\n\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\" key={element.lienMenu + index}>\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"              \r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map((element,index)=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor} key={element + index}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor} key={element + index}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie\"// tousLiens chargement tailleEcran all\"\r\n    style={{\r\n      paddingTop:heightNavBar,\r\n    }}\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n/**\r\n * @props \r\n */\r\nlet heightNavBar=props.height + \"px\";\r\n\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div \r\n        id={\"unitPortfolioCard\" + index}\r\n        className=\"unitPortfolioCard\"\r\n        key={element.lienMenu + index}\r\n        >\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}          \r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div className=\"imgProjet\">\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div \r\n              className=\"detailPortfolio\"\r\n              name={\"button\" + index}>\r\n              <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <div className=\"githubPortfolio\">{githubList(element.GitProjet)}</div>\r\n              \r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   * \r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";           \r\n          }\r\n        }\r\n      \r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = document.getElementsByName(e.target.id)[0].offsetHeight + \"px\";\r\n        moreCloseButtonId.innerText = \"Fermer\"; \r\n           return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"portfolio\"// tousLiens chargement all\"\r\n    style={{\r\n      paddingTop:heightNavBar,\r\n    }}>\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport TopNavigationBar from \"../../assets/Navigation/TopNavigationBar\";\r\nimport SideNavigationBar from \"../../assets/Navigation/SideNavigationBar\"\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport scrollTo from '../../lib/scrollTo'\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n  useEffect(()=>{\r\n    scrollTo(\"propos\");\r\n    document.getElementById('ArrowUp').style.display=\"none\";\r\n  })\r\n\r\n  /**\r\n   * @var\r\n   */\r\n  let heightNavBar=80;\r\n  let backgroundColor=\"#4472c4\";\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">    \r\n      <TopNavigationBar\r\n      height={80}\r\n      backgroundColor={backgroundColor}\r\n      color=\"#f0f8ff\"\r\n      underLine= \"#cc3300\"/>\r\n      <SideNavigationBar/>\r\n      <Presentation\r\n      height={heightNavBar}/>\r\n      <Formation\r\n      height={heightNavBar+ 20}/>\r\n      <Technologie\r\n      height={heightNavBar+ 20}/>\r\n      <Portfolio\r\n      height={heightNavBar+ 20}/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}