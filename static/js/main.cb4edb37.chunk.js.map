{"version":3,"sources":["assets/Navigation/Navigation1.js","assets/Presentation/Presentation.js","assets/Formation/Formation.js","assets/Carousel/Carousel.js","assets/Technologie/Technologie.js","assets/Portfolio/Portfolio.js","assets/Contact/Contact.js","components/Homepage/Homepage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navigation1","props","Presentation","shortData","data","propos","id","lienSection","className","Card","Body","nomSection","dangerouslySetInnerHTML","__html","contenuSection","textePropos","Formation","formations","map","element","index","key","lienMenu","Header","src","config","img","logoFormation","nomFormation","dateFormation","objectifFormation","href","siteFormation","target","title","nomSite","rel","ListGroup","variant","Item","commentaireFormation","titreFormation","lienTitre","doc","type","nomTitre","Carousel","list","listeImage","widthImage","HeightImage","imgWidth","imgHeight","numCarousel","afficheButton","prevNext","carouselUlWidth","length","useEffect","carouselAnimation","carousel","global","document","getElementsByClassName","container","ul","bouton","advance","preview","currentItem","items","children","duringTime","carouselHover","item","getElementById","nom","style","color","transition","left","clearTimeout","interval","startCarouselTimeout","setTimeout","addEventListener","e","carouselNext","forEach","display","justifyContent","border","height","width","maxWidth","overflow","listStyleType","position","margin","padding","fontSize","textAlign","name","source","alt","float","Technologie","techno","imageList","listeTechno","el","push","nomTechno","logoTechno","categorieTechno","level","nFillStar","Math","trunc","nOutLineStar","starShow","i","skillLevel","niveauTechno","Portfolio","projet","photoProjet","nomProjet","anneeProjet","Button","idProjet","onClick","moreCloseButtonName","moreCloseButtonId","moreCloseButtonClass","innerText","overflowY","moreClose","objectifProjet","descriptionProjet","technoProjet","GitProjet","gitNom","gitLien","Contact","contact","Homepage","Object","keys","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb4edb37.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\n\r\n\r\nfunction Navigation1(props) {\r\n    return (\r\n        <div>\r\n            test\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation1;","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n\r\nfunction Presentation(props) {\r\n\r\n/**\r\n * @var shortData : Données extraites BDD * DB extracted data\r\n */\r\n  let shortData = data.propos;\r\n\r\n/**\r\n * @render Construction du DOM * DOM build\r\n*/\r\n  return (\r\n    <section id={shortData.lienSection} className=\"presentation tousLiens tailleEcran all\">\r\n      <div className=\"centre\">\r\n        <Card className=\"textePresentation\">\r\n          <Card.Body>\r\n            <h4>{shortData.nomSection}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[0]}} />\r\n      \r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"textePresentationInf\">\r\n          <Card.Body>\r\n          <div dangerouslySetInnerHTML={{ __html: shortData.contenuSection[0].textePropos[1]}} />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Presentation;\r\n","/**\r\n * Formation.js : Component Formation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Image } from \"react-bootstrap\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\n\r\n\r\nfunction Formation(props) {\r\n  /**\r\n   * @var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.formations;\r\n\r\n  /**\r\n   * @method trainingCard : Affichage des cartes de formations *  Trainig card display\r\n   * @function pj : Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n   */\r\n  const trainingCard=()=>{\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <div className=\"flexCard\" key={element.lienMenu + index}>\r\n          <div id={element.lienMenu} className=\"\"></div>\r\n          <Card className=\"carteFormation\" key={element.lienMenu + index}>\r\n            <Card.Header>\r\n              <div className=\"formationInfo\">\r\n                <img\r\n                  src={config.img + element.logoFormation}\r\n                  className=\"infoImage\"\r\n                />\r\n                <div className=\"infoTexte\">\r\n                  <span className=\"sousTitreSection\">\r\n                    {element.nomFormation}\r\n                  </span>\r\n                  <span>{element.dateFormation}</span>\r\n                  <span>{element.objectifFormation}</span>\r\n                  <span>\r\n                    <a\r\n                      href={element.siteFormation}\r\n                      target=\"_blank\"\r\n                      title={\"lien site \" + element.nomSite}\r\n                      className=\"lienSite\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {element.nomSite}\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                className=\"commentaireFormation\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: element.commentaireFormation,\r\n                }}\r\n              ></ListGroup.Item>\r\n              <ListGroup.Item className=\"fichierFormation\">\r\n                {pj(element.titreFormation)}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    /**\r\n     * @method pj Affichage des liens de chaque pièce jointe * Display each attachements' links\r\n     */\r\n    function pj (doc){\r\n      return doc.map((element, index) => {\r\n        return (\r\n          <div key={element.lienTitre + index}>\r\n            <a\r\n              href={config.doc + element.lienTitre}\r\n              target=\"_blank\"\r\n              type=\"application/pdf\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFilePdf />\r\n              {element.nomTitre}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"formation tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listeFormation\">{trainingCard()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Formation;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React, { useEffect} from \"react\";\r\nimport config from '../../configData/config.json'\r\nimport \"./style.scss\";\r\n\r\nfunction Carousel(props) {\r\n\r\n/**\r\n * @param list Tableau contenant la liste des images à afficher\r\n * @param imgWidth Largeur d'une image\r\n * @param imgHeight Hauteur d'une image\r\n * @param numCarousel Index du carousel\r\n * @param afficheButton True : Affichage des commandes Preview et Next\r\n * @var carouselUlWidth Taille de l'UL du carousel\r\n */\r\n\r\nlet list=props.listeImage;\r\nlet [imgWidth,imgHeight]=[props.widthImage,props.HeightImage];\r\nlet numCarousel=props.numCarousel;\r\nlet afficheButton=props.prevNext;\r\nlet carouselUlWidth=(list.length+1) * 100 + \"%\"; //Taille de chaque carousel suivant le nombre d'image\r\n\r\n/**\r\n * @function useEffect Lance l'animation après construction du DOM\r\n */\r\nuseEffect(()=>{\r\n  carouselAnimation();\r\n})\r\n\r\n/**\r\n * @function carouselAnimation Gestion de l'annimation du caroussel\r\n * @method carouselNext  Animation manuelle Next\r\n * @method carouselPrev  Animation manuelle Preview\r\n * @method carouselAuto  Animation automatique : incrémentation de l'item\r\n * @method startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo\r\n */\r\nconst carouselAnimation=()=>{\r\n  //récupération de chaque élément DOM du carousel\r\n  let carousel={}\r\n  carousel.global=document.getElementsByClassName('carouselGlobal' + numCarousel)[0];\r\n  carousel.container=document.getElementsByClassName('carouselContainer' + numCarousel)[0];\r\n  carousel.ul=document.getElementsByClassName('carouselUl' + numCarousel)[0];\r\n  carousel.bouton={\r\n    advance:document.getElementsByClassName('carouselAdvance' + numCarousel)[0],\r\n    preview:document.getElementsByClassName('carouselPrevious' + numCarousel)[0]\r\n  };\r\n  carousel.currentItem = -1;\r\n  carousel.items=carousel.ul.children;\r\n  \r\n  //Variable de temps initial\r\n  let [duringTime,preview]=[3000,afficheButton];\r\n\r\n  //Fonction d'écoute des boutons s'ils sont utilisés\r\n    if (carousel.bouton.advance){\r\n\t\tcarousel.bouton.preview.addEventListener('click', function(e){ carouselPrev(); });\r\n    carousel.bouton.advance.addEventListener('click', function(e){ carouselNext(); });\r\n    }\r\n  //Fonctions d'écoute des survols de la liste des items\r\n    list.forEach((element,index) => {\r\n      document.getElementById(element.nom).addEventListener('mouseover',function(e){carouselHover(index)})\r\n      document.getElementById(element.nom).addEventListener('mouseleave',function(e){startCarouselTimeout()})\r\n      document.getElementById(element.nom).addEventListener('onFocus',function(e){carouselHover(index)})\r\n  \r\n    });\r\n   \r\n    // Lance la première animation\r\n    startCarouselTimeout(); \r\n\r\n     /**@method  carouselHover  Animation du carousel sur hover des items*/\r\n  function carouselHover(item) {\r\n    //Animation liste des items => reset le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\"\r\n  \r\n    carousel.currentItem=item\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\"\r\n    \r\n\r\n    duringTime=3000;\r\n    carousel.ul.style.transition = \"all 2s ease\"\r\n    carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    clearTimeout(carousel.interval);\r\n  }\r\n\r\n  /**@method  carouselNext  Animation manuelle Next*/\r\n  function carouselNext() {    \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0; \r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      duringTime=500;    \r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    startCarouselTimeout(); \r\n  }\r\n\r\n  /**@method  carouselPrev  Animation manuelle Preview*/\r\n  function carouselPrev() {\r\n    carousel.currentItem--;   \r\n    if(carousel.currentItem <=-1) {\t\r\n      carousel.currentItem = carousel.items.length-1; \r\n      carousel.ul.style.transition = \"none\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n      startCarouselTimeout(); \r\n    }    \r\n  }\r\n\r\n  /**@method  carouselAuto  Animation automatique : incrémentation de l'item*/\r\n  function carouselAuto() {\r\n    //Animation liste des items => reset le style\r\n    if(carousel.currentItem>=0 && carousel.currentItem<list.length){\r\n      document.getElementById(list[carousel.currentItem].nom).style.color=\"#4472c4\";\r\n     \r\n    }\r\n    //Gestion des affichage image  \r\n    carousel.currentItem++;   \r\n    if(carousel.currentItem >= carousel.items.length) {\t\t\r\n      carousel.currentItem = 0;\r\n      carousel.ul.style.transition = 'none'\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"      \r\n      duringTime=500;\r\n    }else{\r\n      duringTime=3000;\r\n      carousel.ul.style.transition = \"all 2s ease\"\r\n      carousel.ul.style.left = -1 * (carousel.currentItem * 100 ) + \"%\"\r\n    }\r\n    //Animation liste des items => Change le style\r\n    document.getElementById(list[carousel.currentItem].nom).style.color=\"#cc3300\";\r\n  \r\n    //Lance la tempo\r\n      startCarouselTimeout(); \r\n  } \r\n\r\n  /**@method  startCarouselTimeout  Lance la tempo active et relance une nouvelle tempo*/\r\n  function startCarouselTimeout() {\r\n    \r\n    clearTimeout(carousel.interval);\r\n      carousel.interval = setTimeout(function(){\r\n        carouselAuto();\r\n      },duringTime);    \r\n  }\r\n}\r\n\r\n/**\r\n * @function createListImage Gestion de la liste d'images\r\n * @method createImg Construction de la liste d'images en fonction de la liste props\r\n */\r\nconst createListImage=()=>{\r\n\r\n  /**@method createImg Construction de la liste d'images en fonction de la liste props*/\r\n  function createImg(){\r\n    return list.map((element,index)=>{\r\n      return (\r\n      <li \r\n        className={\"carouselLi\"  + numCarousel}\r\n        key={\"carouselLi\" + numCarousel + index}\r\n        name={\"carouselLi\" + element.nom}\r\n        >\r\n        <img \r\n        src={config.img + element.source}       \r\n        alt={element.nom}\r\n        name={element.nom}\r\n        style={{\r\n          float: \"left\",\r\n          width: imgWidth,\r\n          height: imgHeight,\r\n        }}      \r\n        />\r\n      </li>)\r\n    })\r\n}\r\n\r\n  return(\r\n    <ul \r\n    className={\"carouselUl\" + numCarousel}\r\n    style={{\r\n      listStyleType: \"none\",\r\n      position: \"relative\",\r\n      width: carouselUlWidth,\r\n      height:\"auto\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      fontSize: \"0\",\r\n      textAlign: \"left\",\r\n    }}\r\n    >\r\n    {createImg()}     \r\n    </ul>)\r\n }\r\n\r\n/**\r\n * @render Construction du DOM\r\n */\r\n  return (\r\n    <div \r\n    className={\"carouselGlobal\" + numCarousel}\r\n    style={{\r\n      display:'flex',\r\n      justifyContent: 'center',\r\n      border: \"3px inset lightgrey\",\r\n    }}\r\n    > \r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselPrevious\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}>\r\n          P\r\n      </button>\r\n      : <></>\r\n      }\r\n      <div          \r\n        className={\"carouselContainer\" + numCarousel}\r\n        style={{\r\n          width: imgWidth,\r\n          maxWidth: \"1000px\",\r\n          overflow: \"hidden\",        \r\n        }}\r\n      >\r\n        {createListImage()}\r\n      </div>\r\n      {afficheButton ? \r\n      <button \r\n        className={\"carouselAdvance\" + numCarousel}\r\n        style={{\r\n          border:\"0px\",\r\n          height:\"28px\",\r\n          width:\"17px\"\r\n        }}\r\n        >\r\n      N\r\n      </button>\r\n      : <></>\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Carousel;","/**\r\n * Technologie.js : Component Technologie\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport { Card, ListGroup} from \"react-bootstrap\";\r\nimport Caroussel from \"../Carousel/Carousel\"\r\nimport { AiFillStar,AiOutlineStar } from 'react-icons/ai';\r\n\r\nfunction Technologie(props) {\r\n  /**\r\n   * @var shortData Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.techno;\r\n\r\n  /**\r\n   * @method technoCard : Affichage des cartes par catégorie de technologie * Technologie category card build display\r\n   * @var imageList : Tableau d'objets nom-source pour le carrousel * Source-name objects Array for the carousel\r\n   * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n   */\r\n  const technoCard = () => {\r\n  \r\n    return shortData.contenuSection.map((element, index) => {\r\n      let imageList=[]\r\n      element.listeTechno.forEach(el => {\r\n        imageList.push({nom: el.nomTechno , source:el.logoTechno})\r\n      });\r\n      imageList.push({nom: element.listeTechno[0].nomTechno , source:element.listeTechno[0].logoTechno})\r\n         return (\r\n          <div className=\"groupTechnoCard\">\r\n            <Card\r\n              id={element.lienMenu}\r\n              className=\"carteTechno\"\r\n              key={element.lienMenu + index}\r\n            >\r\n              <Card.Header>\r\n                <div className=\"TechnoTitre\">\r\n                  <Caroussel\r\n                  numCarousel={index}\r\n                  listeImage={imageList}\r\n                  widthImage=\"50px\"\r\n                  HeightImage=\"50px\"\r\n                  prevNext={false}\r\n                  />\r\n                  <span className=\"sousTitreSection\">               \r\n                    {element.categorieTechno}\r\n                  </span>         \r\n                </div>\r\n              </Card.Header>\r\n              <ListGroup variant=\"flush\">{skillList(element.listeTechno)}</ListGroup>\r\n            </Card>\r\n          </div>\r\n        );\r\n \r\n    });\r\n\r\n    /** \r\n     * @function skillList : Affichage de la liste des technologies par catégorie * Technologies list by category display\r\n     */\r\n    function skillList(techno){   \r\n      return techno.map((element, index) => {\r\n        return (\r\n          <ListGroup.Item \r\n          key={element.nomTechno + index}\r\n          className='skillItem'\r\n          >\r\n            <div className='skillLevel'>\r\n              {skillLevel(element.niveauTechno)}\r\n            </div>\r\n            <div className='skillName'>\r\n              <span\r\n                className=\"itemTecho\"\r\n                id={element.nomTechno}\r\n                name={element.nomTechno + index}\r\n              >\r\n                {element.nomTechno}\r\n              </span>\r\n            </div>\r\n       \r\n          </ListGroup.Item>\r\n        );\r\n      });\r\n    };\r\n  };\r\n \r\n    /**\r\n     * @function skillLevel : Affichage du niveau de compétences * skill level display\r\n     */\r\n    function skillLevel(level){\r\n      let nFillStar=Math.trunc(level/20);\r\n      let nOutLineStar=5-nFillStar;\r\n      let starColor=\"#cc3300\"\r\n      let starShow=[];\r\n      for(let i=0;i<nFillStar;i++){\r\n        starShow.push(\"F\")\r\n      }\r\n      for(let i=0;i<nOutLineStar;i++){\r\n        starShow.push(\"O\")\r\n      }\r\n      return starShow.map(element=>{\r\n        if(element===\"F\"){\r\n          return <AiFillStar color={starColor}/>\r\n        }\r\n        else{\r\n          return <AiOutlineStar color={starColor}/>\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section \r\n    id={shortData.lienSection} \r\n    className=\"technologie tousLiens chargement tailleEcran all\"\r\n    >\r\n      <div \r\n      className=\"centre\"\r\n      >\r\n   \r\n            <h4 \r\n            className=\"titreSection\"\r\n            >\r\n              {shortData.nomSection}\r\n            </h4>\r\n        <div \r\n        className=\"listeTechno\" \r\n        id=\"listeTechno\"\r\n        >\r\n          {technoCard()}\r\n        </div>\r\n      \r\n      </div>\r\n    </section>\r\n  );\r\n \r\n}\r\nexport default Technologie;\r\n","/**\r\n * Portfolio.js : Component Portfolio\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport config from \"../../configData/config.json\";\r\nimport { Card, ListGroup, Image, Button } from \"react-bootstrap\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\n\r\nfunction Portfolio(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.projet;\r\n \r\n  /**\r\n   * @method portfolioCard : Affichage des projets du portfolio * Portfolio projets display\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n   * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n   */\r\n  const portfolioCard = () => {\r\n    return shortData.contenuSection.map((element, index) => {\r\n      return (\r\n        <Card\r\n          id={element.lienMenu}\r\n          className=\"cartePortfolio\"\r\n          key={element.lienMenu + index}\r\n        >\r\n          <Card.Header>\r\n            <div className=\"titrePortfolio\">\r\n              <div className=\"imgProjet\">\r\n                <img src={config.img + element.photoProjet} className=\"ImagePortfolio\"  alt={\"photo\" + element.photoProjet}/>\r\n              </div>\r\n              <div className=\"TextePortfolio\">\r\n                <span className=\"sousTitreSection\">{element.nomProjet}</span>\r\n                <span>{element.anneeProjet}</span>\r\n              </div>\r\n              <Button         \r\n                id={\"button\" + index}\r\n                name={element.idProjet + index}\r\n                className={\"moreCloseButton\"}\r\n                onClick={(e) => {\r\n                  moreClose(e);\r\n                }}\r\n              >\r\n                En savoir plus..\r\n              </Button>\r\n            </div>\r\n          </Card.Header>\r\n          <ListGroup\r\n            variant=\"flush\"\r\n            id={element.idProjet + index}\r\n            className=\"plus\"\r\n          >\r\n            <div className=\"detailPortfolio\">\r\n              <p className=\"portfolioSeparation\">{element.objectifProjet}</p>\r\n              <span>{element.descriptionProjet}</span>\r\n              <p className=\"portfolioSeparation\">Technologies</p>\r\n              <span>{element.technoProjet}</span>\r\n              <p className=\"portfolioSeparation\">Liens</p>\r\n              <span>{githubList(element.GitProjet)}</span>\r\n            </div>\r\n          </ListGroup>\r\n        </Card>\r\n      );\r\n    });\r\n\r\n  /**\r\n   * @function moreClose : Animation en fonction de l'etat de la commande \"en savoir plus\" (affichage du détail) ou \"Fermer\" (cacher le détail)\r\n   *                      * Animation depending on \"en savoir plus\" (show more) or \"Fermer\" (hide more) order status\r\n   * @var moreCloseButtonName : récupère le nom du bouton \"moreClose\" selectionné * keep select button \"moreClose\" name\r\n   * @var moreCloseButtonId : récupère l'ID du bouton \"moreClose\" selectionné * keep select button \"moreClose\" ID\r\n   * @var moreCloseButtonClass : récupère la class du bouton \"moreClose\" selectionné * keep select button \"moreClose\" Classname\r\n   */\r\n    function moreClose(e){\r\n      let moreCloseButtonName = document.getElementById(e.target.name);\r\n      let moreCloseButtonId = document.getElementById(e.target.id);\r\n      let moreCloseButtonClass = document.getElementsByClassName(\"moreCloseButton\");\r\n      //Fermeture de l'ensemble des elements * Close all elements\r\n        for (let i=0;i<moreCloseButtonClass.length;i++){\r\n          if (document.getElementById(moreCloseButtonClass[i].id)!==moreCloseButtonId){\r\n            document.getElementById(moreCloseButtonClass[i].id).innerText = \"En savoir plus..\";\r\n            document.getElementById(moreCloseButtonClass[i].name).style.height = \"0\";\r\n          }\r\n      }\r\n      //Ouverture de l'ensemble de l'element sélectionné * Open element selected\r\n      if (moreCloseButtonId.innerText === \"En savoir plus..\") {\r\n        moreCloseButtonName.style.height = \"200px\";\r\n        moreCloseButtonName.style.overflowY = \"scroll\";\r\n        moreCloseButtonId.innerText = \"Fermer\";\r\n        return;\r\n      }\r\n      //Fermeture de l'ensemble de l'element sélectionné * Close element selected\r\n      if (moreCloseButtonId.innerText === \"Fermer\") {\r\n        moreCloseButtonName.style.height = \"0\";\r\n        moreCloseButtonId.innerText = \"En savoir plus..\";\r\n        return;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @function githubList : Affichage de la liste des liens GitHub * GitHub links list display\r\n     * @param githubLink : Tableau contenant la liste des liens github  * GitHub links list array\r\n     */\r\n    function githubList(githubLink){\r\n      return githubLink.map((element, index) => {\r\n        return (\r\n          <div key={element.gitNom + index}>\r\n            <AiFillGithub />\r\n            <a\r\n              href={element.gitLien}\r\n              title={\"Lien GitHub \" + element.gitNom}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {element.gitNom}\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"portfolio tousLiens chargement all\">\r\n      <div className=\"centre\">\r\n\r\n        <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n        <div className=\"listePortfolio\">{portfolioCard()}</div>\r\n       \r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Portfolio;\r\n","/**\r\n * Presentation.js : Component Presentation\r\n */\r\nimport React from \"react\";\r\nimport \"./style.scss\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\n\r\n\r\nfunction Contact(props) {\r\n  /**\r\n   *@var shortData : Données extraites BDD * DB extracted data\r\n   */\r\n  let shortData = data.contact;\r\n  \r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <section id={shortData.lienSection} className=\"contact tousLiens chargement tailleEcran all\">\r\n      <h4 className=\"titreSection\">{shortData.nomSection}</h4>\r\n    </section>\r\n  );\r\n}\r\nexport default Contact;\r\n","/**\r\n * Homepage.js : Component Homepage\r\n */\r\nimport React from \"react\";\r\nimport Navigation1 from \"../../assets/Navigation/Navigation1\";\r\nimport Presentation from \"../../assets/Presentation/Presentation\";\r\nimport Formation from \"../../assets/Formation/Formation\";\r\nimport Technologie from \"../../assets/Technologie/Technologie\";\r\nimport Portfolio from \"../../assets/Portfolio/Portfolio\";\r\nimport Contact from \"../../assets/Contact/Contact\";\r\nimport config from \"../../configData/config.json\";\r\nimport data from \"../../configData/dataPortfolio.json\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Homepage(props) {\r\n\r\n  /**\r\n   * @method startDisplay : Affichage au démarrage de la page * Start page display\r\n   * @var sectionList : Tableau sections BDD * DB sections array                     \r\n   */\r\n  const startDisplay=()=>{\r\n    setTimeout(function(){\r\n      document.getElementById(\"depart\").style.display = \"none\";     \r\n      document.getElementById(\"propos\").style.display = \"flex\";\r\n      let sectionList=Object.keys(data);\r\n      sectionList.forEach(element=>{\r\n        document.getElementById(data[element].lienSection).style.display = \"flex\";\r\n      });\r\n      }\r\n      , 10000);\r\n    /*setTimeout(function(){      \r\n      document.getElementsByClassName(\"listeNavigation\")[0].style.opacity = \"1\";   \r\n      document.getElementsByClassName(\"boutonNavigation\")[0].style.opacity = \"1\"; \r\n      }\r\n      , 15000);*/\r\n    }  \r\n \r\n /**\r\n  * @method imageHomepage : Affichage de l'image de fond * Background image display\r\n  */\r\n  const imageHomepage=()=>{\r\n    return (\r\n      <div id=\"depart\" className=\"tousLiens imageFond all\" style={{\"height\":\"100vh\",\"width\":\"100vw\", \"overflow\":\"hidden\"}}>\r\n        <img src={config.img + \"webDev.jpg\"} style={{\"height\": \"100%\", \"width\":\"100%\"}} alt=\"image Geek :)\"/>\r\n      </div>)    \r\n  }\r\n\r\n  /**\r\n   * @render Construction du DOM * DOM build\r\n   */\r\n  return (\r\n    <div className=\"homepage\" id=\"homepage\">\r\n      <Navigation1 />\r\n      {imageHomepage()}\r\n      {startDisplay()}\r\n      <Presentation/>\r\n      <Formation/>\r\n      <Technologie/>\r\n      <Portfolio/>\r\n      <Contact/>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","/**\r\n * Module principal\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.scss\";\r\nimport Homepage from \"../Homepage/Homepage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}